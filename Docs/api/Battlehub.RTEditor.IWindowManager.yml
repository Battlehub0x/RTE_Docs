### YamlMime:ManagedReference
items:
- uid: Battlehub.RTEditor.IWindowManager
  commentId: T:Battlehub.RTEditor.IWindowManager
  id: IWindowManager
  parent: Battlehub.RTEditor
  children:
  - Battlehub.RTEditor.IWindowManager.ActivateWindow(System.String)
  - Battlehub.RTEditor.IWindowManager.ActivateWindow(Transform)
  - Battlehub.RTEditor.IWindowManager.ActiveWorkspace
  - Battlehub.RTEditor.IWindowManager.AfterLayout
  - Battlehub.RTEditor.IWindowManager.ComponentsRoot
  - Battlehub.RTEditor.IWindowManager.Confirmation(Sprite,System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.String)
  - Battlehub.RTEditor.IWindowManager.Confirmation(Sprite,System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String)
  - Battlehub.RTEditor.IWindowManager.Confirmation(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.String)
  - Battlehub.RTEditor.IWindowManager.Confirmation(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String)
  - Battlehub.RTEditor.IWindowManager.CopyTransform(Transform,Transform)
  - Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.Boolean,System.Single,System.Single)
  - Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.Single,System.Single,System.Single,System.Single,System.Boolean)
  - Battlehub.RTEditor.IWindowManager.CreateDropdown(System.String,RectTransform,System.Boolean,System.Single,System.Single)
  - Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(System.String)
  - Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(System.String,System.String)
  - Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(Transform,Battlehub.RTEditor.WindowDescriptor)
  - Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(Transform,System.String,Sprite)
  - Battlehub.RTEditor.IWindowManager.CreatePopup(System.String,System.Boolean,System.Single,System.Single)
  - Battlehub.RTEditor.IWindowManager.CreatePopup(System.String,Vector2,System.Boolean,System.Single,System.Single)
  - Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@)
  - Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@,GameObject@,System.Boolean@)
  - Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@,System.Boolean@)
  - Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,System.Boolean,RegionSplitType,System.Single,Transform)
  - Battlehub.RTEditor.IWindowManager.DefaultPersistentLayoutName
  - Battlehub.RTEditor.IWindowManager.DeleteLayout(System.String)
  - Battlehub.RTEditor.IWindowManager.DestroyDialogWindow
  - Battlehub.RTEditor.IWindowManager.DestroyWindow(Transform)
  - Battlehub.RTEditor.IWindowManager.DestroyWindowsOfType(System.String)
  - Battlehub.RTEditor.IWindowManager.Dialog(Sprite,System.String,Transform,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  - Battlehub.RTEditor.IWindowManager.Dialog(Sprite,System.String,Transform,DialogAction{DialogCancelArgs},System.String,DialogAction{DialogCancelArgs},System.String,System.Boolean,System.Single,System.Single)
  - Battlehub.RTEditor.IWindowManager.Dialog(System.String,Transform,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  - Battlehub.RTEditor.IWindowManager.Dialog(System.String,Transform,DialogAction{DialogCancelArgs},System.String,DialogAction{DialogCancelArgs},System.String,System.Boolean,System.Single,System.Single)
  - Battlehub.RTEditor.IWindowManager.Exists(System.String)
  - Battlehub.RTEditor.IWindowManager.FindPointerOverWindow(Battlehub.RTCommon.RuntimeWindow)
  - Battlehub.RTEditor.IWindowManager.ForceLayoutUpdate
  - Battlehub.RTEditor.IWindowManager.GetComponents(Transform)
  - Battlehub.RTEditor.IWindowManager.GetHeaderIcon(Transform)
  - Battlehub.RTEditor.IWindowManager.GetHeaderText(Transform)
  - Battlehub.RTEditor.IWindowManager.GetLayout
  - Battlehub.RTEditor.IWindowManager.GetLayout(System.String,GameObject)
  - Battlehub.RTEditor.IWindowManager.GetWindow(System.String)
  - Battlehub.RTEditor.IWindowManager.GetWindowDescriptor(System.String,System.Boolean@)
  - Battlehub.RTEditor.IWindowManager.GetWindows
  - Battlehub.RTEditor.IWindowManager.GetWindows(System.String)
  - Battlehub.RTEditor.IWindowManager.GetWindowTypeName(Transform)
  - Battlehub.RTEditor.IWindowManager.IsActive(System.String)
  - Battlehub.RTEditor.IWindowManager.IsActive(Transform)
  - Battlehub.RTEditor.IWindowManager.IsDialogOpened
  - Battlehub.RTEditor.IWindowManager.IsWindowRegistered(System.String)
  - Battlehub.RTEditor.IWindowManager.LayoutExist(System.String)
  - Battlehub.RTEditor.IWindowManager.LoadLayout(System.String,GameObject)
  - Battlehub.RTEditor.IWindowManager.MessageBox(Sprite,System.String,System.String,DialogAction{DialogCancelArgs})
  - Battlehub.RTEditor.IWindowManager.MessageBox(System.String,System.String,DialogAction{DialogCancelArgs})
  - Battlehub.RTEditor.IWindowManager.OverrideDefaultLayout(Func{Battlehub.RTEditor.IWindowManager,LayoutInfo},System.String)
  - Battlehub.RTEditor.IWindowManager.OverrideTools(Transform)
  - Battlehub.RTEditor.IWindowManager.OverrideWindow(System.String,Battlehub.RTEditor.WindowDescriptor)
  - Battlehub.RTEditor.IWindowManager.OverrideWindow(System.String,GameObject)
  - Battlehub.RTEditor.IWindowManager.PopupRoot
  - Battlehub.RTEditor.IWindowManager.Prompt(Sprite,System.String,System.String,DialogAction{Battlehub.RTEditor.PromptDialogArgs},DialogAction{Battlehub.RTEditor.PromptDialogArgs},System.String,System.String)
  - Battlehub.RTEditor.IWindowManager.Prompt(System.String,System.String,DialogAction{Battlehub.RTEditor.PromptDialogArgs},DialogAction{Battlehub.RTEditor.PromptDialogArgs},System.String,System.String)
  - Battlehub.RTEditor.IWindowManager.RegisterWindow(Battlehub.RTEditor.CustomWindowDescriptor)
  - Battlehub.RTEditor.IWindowManager.SaveLayout(System.String)
  - Battlehub.RTEditor.IWindowManager.ScreenPointToLocalPointInRectangle(RectTransform,Vector3,Vector2@)
  - Battlehub.RTEditor.IWindowManager.SetBottomBar(Transform)
  - Battlehub.RTEditor.IWindowManager.SetDefaultLayout
  - Battlehub.RTEditor.IWindowManager.SetHeaderIcon(Transform,Sprite)
  - Battlehub.RTEditor.IWindowManager.SetHeaderText(Transform,System.String)
  - Battlehub.RTEditor.IWindowManager.SetLayout(Func{Battlehub.RTEditor.IWindowManager,LayoutInfo},System.String)
  - Battlehub.RTEditor.IWindowManager.SetLayout(Func{LayoutInfo},System.String)
  - Battlehub.RTEditor.IWindowManager.SetLeftBar(Transform)
  - Battlehub.RTEditor.IWindowManager.SetRightBar(Transform)
  - Battlehub.RTEditor.IWindowManager.SetTools(Transform)
  - Battlehub.RTEditor.IWindowManager.SetTopBar(Transform)
  - Battlehub.RTEditor.IWindowManager.SetTransform(Transform,Vector2,Vector2,Vector2,Vector2)
  - Battlehub.RTEditor.IWindowManager.SetWindowArgs(Transform,System.String)
  - Battlehub.RTEditor.IWindowManager.ValidateLayout(LayoutInfo)
  - Battlehub.RTEditor.IWindowManager.WindowCreated
  - Battlehub.RTEditor.IWindowManager.WindowDestroyed
  langs:
  - csharp
  - vb
  name: IWindowManager
  nameWithType: IWindowManager
  fullName: Battlehub.RTEditor.IWindowManager
  type: Interface
  source:
    id: IWindowManager
    path: ''
    startLine: 34451
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nThe window manager allows you to create complex windows, such as an inspector or scene, and simple dialogs, such as a message or confirmation window.\n\nThe difference between a dialog and a window is quite subtle.The content of a dialog can be anything and it cannot be docked. \nTo be considered a window or dialog box, a RuntimeWindow component must be attached to the game object. \nWhen RuntimeWindow is activated, other windows are deactivated. A dialog cannot deactivate a window.\n"
  example: []
  syntax:
    content: public interface IWindowManager
    content.vb: Public Interface IWindowManager
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Battlehub.RTEditor.IWindowManager.IsDialogOpened
  commentId: P:Battlehub.RTEditor.IWindowManager.IsDialogOpened
  id: IsDialogOpened
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: IsDialogOpened
  nameWithType: IWindowManager.IsDialogOpened
  fullName: Battlehub.RTEditor.IWindowManager.IsDialogOpened
  type: Property
  source:
    id: IsDialogOpened
    path: ''
    startLine: 34456
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nReturns true if dialog opened.\n"
  example: []
  syntax:
    content: bool IsDialogOpened { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsDialogOpened As Boolean
  overload: Battlehub.RTEditor.IWindowManager.IsDialogOpened*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Battlehub.RTEditor.IWindowManager.PopupRoot
  commentId: P:Battlehub.RTEditor.IWindowManager.PopupRoot
  id: PopupRoot
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: PopupRoot
  nameWithType: IWindowManager.PopupRoot
  fullName: Battlehub.RTEditor.IWindowManager.PopupRoot
  type: Property
  source:
    id: PopupRoot
    path: ''
    startLine: 34464
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nRoot panel for popups and floating windows.\n"
  example: []
  syntax:
    content: RectTransform PopupRoot { get; }
    parameters: []
    return:
      type: Global.RectTransform
    content.vb: ReadOnly Property PopupRoot As RectTransform
  overload: Battlehub.RTEditor.IWindowManager.PopupRoot*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Battlehub.RTEditor.IWindowManager.ComponentsRoot
  commentId: P:Battlehub.RTEditor.IWindowManager.ComponentsRoot
  id: ComponentsRoot
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: ComponentsRoot
  nameWithType: IWindowManager.ComponentsRoot
  fullName: Battlehub.RTEditor.IWindowManager.ComponentsRoot
  type: Property
  source:
    id: ComponentsRoot
    path: ''
    startLine: 34472
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nThe root transform for additional window components. Each window can have one or more additional components that must not have UI Canvas as a parent. \n"
  example: []
  syntax:
    content: Transform ComponentsRoot { get; }
    parameters: []
    return:
      type: Global.Transform
    content.vb: ReadOnly Property ComponentsRoot As Transform
  overload: Battlehub.RTEditor.IWindowManager.ComponentsRoot*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Battlehub.RTEditor.IWindowManager.AfterLayout
  commentId: E:Battlehub.RTEditor.IWindowManager.AfterLayout
  id: AfterLayout
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: AfterLayout
  nameWithType: IWindowManager.AfterLayout
  fullName: Battlehub.RTEditor.IWindowManager.AfterLayout
  type: Event
  source:
    id: AfterLayout
    path: ''
    startLine: 34480
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nTriggers when the layout stage is complete, when all the windows are positioned and ready to use.\n"
  example: []
  syntax:
    content: event Action<IWindowManager> AfterLayout
    return:
      type: Global.Action{Battlehub.RTEditor.IWindowManager}
    content.vb: Event AfterLayout As Action(Of IWindowManager)
- uid: Battlehub.RTEditor.IWindowManager.WindowCreated
  commentId: E:Battlehub.RTEditor.IWindowManager.WindowCreated
  id: WindowCreated
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: WindowCreated
  nameWithType: IWindowManager.WindowCreated
  fullName: Battlehub.RTEditor.IWindowManager.WindowCreated
  type: Event
  source:
    id: WindowCreated
    path: ''
    startLine: 34485
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nTriggers after creating a new window.\n"
  example: []
  syntax:
    content: event Action<Transform> WindowCreated
    return:
      type: Global.Action{Transform}
    content.vb: Event WindowCreated As Action(Of Transform)
- uid: Battlehub.RTEditor.IWindowManager.WindowDestroyed
  commentId: E:Battlehub.RTEditor.IWindowManager.WindowDestroyed
  id: WindowDestroyed
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: WindowDestroyed
  nameWithType: IWindowManager.WindowDestroyed
  fullName: Battlehub.RTEditor.IWindowManager.WindowDestroyed
  type: Event
  source:
    id: WindowDestroyed
    path: ''
    startLine: 34490
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nTriggers after the window is destroyed.\n"
  example: []
  syntax:
    content: event Action<Transform> WindowDestroyed
    return:
      type: Global.Action{Transform}
    content.vb: Event WindowDestroyed As Action(Of Transform)
- uid: Battlehub.RTEditor.IWindowManager.ActiveWorkspace
  commentId: P:Battlehub.RTEditor.IWindowManager.ActiveWorkspace
  id: ActiveWorkspace
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: ActiveWorkspace
  nameWithType: IWindowManager.ActiveWorkspace
  fullName: Battlehub.RTEditor.IWindowManager.ActiveWorkspace
  type: Property
  source:
    id: ActiveWorkspace
    path: ''
    startLine: 34495
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nIWindowManager can be used to work with multiple workspaces.\n"
  example: []
  syntax:
    content: Workspace ActiveWorkspace { get; set; }
    parameters: []
    return:
      type: Battlehub.RTEditor.Workspace
    content.vb: Property ActiveWorkspace As Workspace
  overload: Battlehub.RTEditor.IWindowManager.ActiveWorkspace*
  modifiers.csharp:
  - get
  - set
- uid: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(System.String)
  id: CreateLayoutInfo(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateLayoutInfo(String)
  nameWithType: IWindowManager.CreateLayoutInfo(String)
  fullName: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(System.String)
  type: Method
  source:
    id: CreateLayoutInfo
    path: ''
    startLine: 34508
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates a LayoutInfo object for the window of <code data-dev-comment-type=\"paramref\" class=\"paramref\">windowTypeName</code> (creates a window as a side effect).\n\nThis function and its overrides should be used when creating different &quot;layouts&quot;. See BuiltInWindowNames for common window type names.\n"
  example: []
  syntax:
    content: LayoutInfo CreateLayoutInfo(string windowTypeName)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Type of window to be created
    return:
      type: Global.LayoutInfo
      description: LayoutInfo.
    content.vb: Function CreateLayoutInfo(windowTypeName As String) As LayoutInfo
  overload: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo*
- uid: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(System.String,System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(System.String,System.String)
  id: CreateLayoutInfo(System.String,System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateLayoutInfo(String, String)
  nameWithType: IWindowManager.CreateLayoutInfo(String, String)
  fullName: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(System.String, System.String)
  type: Method
  source:
    id: CreateLayoutInfo
    path: ''
    startLine: 34516
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates a LayoutInfo object for the window of <code data-dev-comment-type=\"paramref\" class=\"paramref\">windowTypeName</code> (creates a window as a side effect).\n"
  example: []
  syntax:
    content: LayoutInfo CreateLayoutInfo(string windowTypeName, string args)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Type of window to be created.
    - id: args
      type: System.String
      description: Optional arguments can be obtained using the RuntimeWindow.Args property.
    return:
      type: Global.LayoutInfo
      description: LayoutInfo.
    content.vb: Function CreateLayoutInfo(windowTypeName As String, args As String) As LayoutInfo
  overload: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo*
- uid: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(Transform,Battlehub.RTEditor.WindowDescriptor)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(Transform,Battlehub.RTEditor.WindowDescriptor)
  id: CreateLayoutInfo(Transform,Battlehub.RTEditor.WindowDescriptor)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateLayoutInfo(Transform, WindowDescriptor)
  nameWithType: IWindowManager.CreateLayoutInfo(Transform, WindowDescriptor)
  fullName: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(Transform, Battlehub.RTEditor.WindowDescriptor)
  type: Method
  source:
    id: CreateLayoutInfo
    path: ''
    startLine: 34524
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates a LayoutInfo object for the window (creates a window as a side effect).\n"
  example: []
  syntax:
    content: LayoutInfo CreateLayoutInfo(Transform content, WindowDescriptor desc)
    parameters:
    - id: content
      type: Global.Transform
      description: Transform of the window.
    - id: desc
      type: Battlehub.RTEditor.WindowDescriptor
      description: Object that describes an icon, a header, a tab and provides information about how many windows of that type can be created.
    return:
      type: Global.LayoutInfo
      description: LayoutInfo.
    content.vb: Function CreateLayoutInfo(content As Transform, desc As WindowDescriptor) As LayoutInfo
  overload: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo*
- uid: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(Transform,System.String,Sprite)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(Transform,System.String,Sprite)
  id: CreateLayoutInfo(Transform,System.String,Sprite)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateLayoutInfo(Transform, String, Sprite)
  nameWithType: IWindowManager.CreateLayoutInfo(Transform, String, Sprite)
  fullName: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo(Transform, System.String, Sprite)
  type: Method
  source:
    id: CreateLayoutInfo
    path: ''
    startLine: 34533
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates a LayoutInfo object for the window (creates a window as a side effect).\n"
  example: []
  syntax:
    content: LayoutInfo CreateLayoutInfo(Transform content, string header, Sprite icon)
    parameters:
    - id: content
      type: Global.Transform
      description: Transform of the window.
    - id: header
      type: System.String
      description: Header text.
    - id: icon
      type: Global.Sprite
      description: Header icon.
    return:
      type: Global.LayoutInfo
      description: LayoutInfo.
    content.vb: Function CreateLayoutInfo(content As Transform, header As String, icon As Sprite) As LayoutInfo
  overload: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo*
- uid: Battlehub.RTEditor.IWindowManager.ValidateLayout(LayoutInfo)
  commentId: M:Battlehub.RTEditor.IWindowManager.ValidateLayout(LayoutInfo)
  id: ValidateLayout(LayoutInfo)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: ValidateLayout(LayoutInfo)
  nameWithType: IWindowManager.ValidateLayout(LayoutInfo)
  fullName: Battlehub.RTEditor.IWindowManager.ValidateLayout(LayoutInfo)
  type: Method
  source:
    id: ValidateLayout
    path: ''
    startLine: 34540
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nValidates layout.\n"
  example: []
  syntax:
    content: bool ValidateLayout(LayoutInfo layout)
    parameters:
    - id: layout
      type: Global.LayoutInfo
      description: LayoutInfo object.
    return:
      type: System.Boolean
      description: True if layout is valid.
    content.vb: Function ValidateLayout(layout As LayoutInfo) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.ValidateLayout*
- uid: Battlehub.RTEditor.IWindowManager.OverrideDefaultLayout(Func{Battlehub.RTEditor.IWindowManager,LayoutInfo},System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.OverrideDefaultLayout(Func{Battlehub.RTEditor.IWindowManager,LayoutInfo},System.String)
  id: OverrideDefaultLayout(Func{Battlehub.RTEditor.IWindowManager,LayoutInfo},System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: OverrideDefaultLayout(Func<IWindowManager, LayoutInfo>, String)
  nameWithType: IWindowManager.OverrideDefaultLayout(Func<IWindowManager, LayoutInfo>, String)
  fullName: Battlehub.RTEditor.IWindowManager.OverrideDefaultLayout(Func<Battlehub.RTEditor.IWindowManager, LayoutInfo>, System.String)
  type: Method
  source:
    id: OverrideDefaultLayout
    path: ''
    startLine: 34547
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nOverrides default layout builder function.\n"
  example: []
  syntax:
    content: void OverrideDefaultLayout(Func<IWindowManager, LayoutInfo> layoutBuilderFunc, string activateWindowOfType = null)
    parameters:
    - id: layoutBuilderFunc
      type: Global.Func{Battlehub.RTEditor.IWindowManager,LayoutInfo}
      description: Layout builder function.
    - id: activateWindowOfType
      type: System.String
      description: Type of the window to activate after building layout.
    content.vb: Sub OverrideDefaultLayout(layoutBuilderFunc As Func(Of IWindowManager, LayoutInfo), activateWindowOfType As String = Nothing)
  overload: Battlehub.RTEditor.IWindowManager.OverrideDefaultLayout*
  nameWithType.vb: IWindowManager.OverrideDefaultLayout(Func(Of IWindowManager, LayoutInfo), String)
  fullName.vb: Battlehub.RTEditor.IWindowManager.OverrideDefaultLayout(Func(Of Battlehub.RTEditor.IWindowManager, LayoutInfo), System.String)
  name.vb: OverrideDefaultLayout(Func(Of IWindowManager, LayoutInfo), String)
- uid: Battlehub.RTEditor.IWindowManager.SetDefaultLayout
  commentId: M:Battlehub.RTEditor.IWindowManager.SetDefaultLayout
  id: SetDefaultLayout
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetDefaultLayout()
  nameWithType: IWindowManager.SetDefaultLayout()
  fullName: Battlehub.RTEditor.IWindowManager.SetDefaultLayout()
  type: Method
  source:
    id: SetDefaultLayout
    path: ''
    startLine: 34552
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nRebuilds the layout using the default layout builder function.\n"
  example: []
  syntax:
    content: void SetDefaultLayout()
    content.vb: Sub SetDefaultLayout
  overload: Battlehub.RTEditor.IWindowManager.SetDefaultLayout*
- uid: Battlehub.RTEditor.IWindowManager.SetLayout(Func{LayoutInfo},System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetLayout(Func{LayoutInfo},System.String)
  id: SetLayout(Func{LayoutInfo},System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetLayout(Func<LayoutInfo>, String)
  nameWithType: IWindowManager.SetLayout(Func<LayoutInfo>, String)
  fullName: Battlehub.RTEditor.IWindowManager.SetLayout(Func<LayoutInfo>, System.String)
  type: Method
  source:
    id: SetLayout
    path: ''
    startLine: 34559
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nBuilds layout using layout builder function.\n"
  example: []
  syntax:
    content: void SetLayout(Func<LayoutInfo> layoutBuilderFunc, string activateWindowOfType = null)
    parameters:
    - id: layoutBuilderFunc
      type: Global.Func{LayoutInfo}
      description: Layout builder function.
    - id: activateWindowOfType
      type: System.String
      description: Type of the window to activate after building layout.
    content.vb: Sub SetLayout(layoutBuilderFunc As Func(Of LayoutInfo), activateWindowOfType As String = Nothing)
  overload: Battlehub.RTEditor.IWindowManager.SetLayout*
  nameWithType.vb: IWindowManager.SetLayout(Func(Of LayoutInfo), String)
  fullName.vb: Battlehub.RTEditor.IWindowManager.SetLayout(Func(Of LayoutInfo), System.String)
  name.vb: SetLayout(Func(Of LayoutInfo), String)
- uid: Battlehub.RTEditor.IWindowManager.SetLayout(Func{Battlehub.RTEditor.IWindowManager,LayoutInfo},System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetLayout(Func{Battlehub.RTEditor.IWindowManager,LayoutInfo},System.String)
  id: SetLayout(Func{Battlehub.RTEditor.IWindowManager,LayoutInfo},System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetLayout(Func<IWindowManager, LayoutInfo>, String)
  nameWithType: IWindowManager.SetLayout(Func<IWindowManager, LayoutInfo>, String)
  fullName: Battlehub.RTEditor.IWindowManager.SetLayout(Func<Battlehub.RTEditor.IWindowManager, LayoutInfo>, System.String)
  type: Method
  source:
    id: SetLayout
    path: ''
    startLine: 34566
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nBuilds layout using layout builder function.\n"
  example: []
  syntax:
    content: void SetLayout(Func<IWindowManager, LayoutInfo> layoutBuilderFunc, string activateWindowOfType = null)
    parameters:
    - id: layoutBuilderFunc
      type: Global.Func{Battlehub.RTEditor.IWindowManager,LayoutInfo}
      description: Layout builder function.
    - id: activateWindowOfType
      type: System.String
      description: Type of the window to activate after building layout.
    content.vb: Sub SetLayout(layoutBuilderFunc As Func(Of IWindowManager, LayoutInfo), activateWindowOfType As String = Nothing)
  overload: Battlehub.RTEditor.IWindowManager.SetLayout*
  nameWithType.vb: IWindowManager.SetLayout(Func(Of IWindowManager, LayoutInfo), String)
  fullName.vb: Battlehub.RTEditor.IWindowManager.SetLayout(Func(Of Battlehub.RTEditor.IWindowManager, LayoutInfo), System.String)
  name.vb: SetLayout(Func(Of IWindowManager, LayoutInfo), String)
- uid: Battlehub.RTEditor.IWindowManager.GetLayout
  commentId: M:Battlehub.RTEditor.IWindowManager.GetLayout
  id: GetLayout
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetLayout()
  nameWithType: IWindowManager.GetLayout()
  fullName: Battlehub.RTEditor.IWindowManager.GetLayout()
  type: Method
  source:
    id: GetLayout
    path: ''
    startLine: 34572
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates LayoutInfo object describing current layout.\n"
  example: []
  syntax:
    content: LayoutInfo GetLayout()
    return:
      type: Global.LayoutInfo
      description: ''
    content.vb: Function GetLayout As LayoutInfo
  overload: Battlehub.RTEditor.IWindowManager.GetLayout*
- uid: Battlehub.RTEditor.IWindowManager.OverrideWindow(System.String,Battlehub.RTEditor.WindowDescriptor)
  commentId: M:Battlehub.RTEditor.IWindowManager.OverrideWindow(System.String,Battlehub.RTEditor.WindowDescriptor)
  id: OverrideWindow(System.String,Battlehub.RTEditor.WindowDescriptor)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: OverrideWindow(String, WindowDescriptor)
  nameWithType: IWindowManager.OverrideWindow(String, WindowDescriptor)
  fullName: Battlehub.RTEditor.IWindowManager.OverrideWindow(System.String, Battlehub.RTEditor.WindowDescriptor)
  type: Method
  source:
    id: OverrideWindow
    path: ''
    startLine: 34579
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nOverrides the WindowDescriptor of a registered window.\n"
  example: []
  syntax:
    content: void OverrideWindow(string windowTypeName, WindowDescriptor descriptor)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    - id: descriptor
      type: Battlehub.RTEditor.WindowDescriptor
      description: Window descriptor.
    content.vb: Sub OverrideWindow(windowTypeName As String, descriptor As WindowDescriptor)
  overload: Battlehub.RTEditor.IWindowManager.OverrideWindow*
- uid: Battlehub.RTEditor.IWindowManager.OverrideWindow(System.String,GameObject)
  commentId: M:Battlehub.RTEditor.IWindowManager.OverrideWindow(System.String,GameObject)
  id: OverrideWindow(System.String,GameObject)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: OverrideWindow(String, GameObject)
  nameWithType: IWindowManager.OverrideWindow(String, GameObject)
  fullName: Battlehub.RTEditor.IWindowManager.OverrideWindow(System.String, GameObject)
  type: Method
  source:
    id: OverrideWindow
    path: ''
    startLine: 34586
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nOverrides the prefab of a registered window. \n"
  example: []
  syntax:
    content: void OverrideWindow(string windowTypeName, GameObject prefab)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    - id: prefab
      type: Global.GameObject
    content.vb: Sub OverrideWindow(windowTypeName As String, prefab As GameObject)
  overload: Battlehub.RTEditor.IWindowManager.OverrideWindow*
- uid: Battlehub.RTEditor.IWindowManager.OverrideTools(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.OverrideTools(Transform)
  id: OverrideTools(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: OverrideTools(Transform)
  nameWithType: IWindowManager.OverrideTools(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.OverrideTools(Transform)
  type: Method
  source:
    id: OverrideTools
    path: ''
    startLine: 34592
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nOverrides header tools (play, pause, pivot mode and various toggles).\n"
  example: []
  syntax:
    content: void OverrideTools(Transform toolsPrefab)
    parameters:
    - id: toolsPrefab
      type: Global.Transform
      description: Tools prefab transform.
    content.vb: Sub OverrideTools(toolsPrefab As Transform)
  overload: Battlehub.RTEditor.IWindowManager.OverrideTools*
- uid: Battlehub.RTEditor.IWindowManager.SetTools(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetTools(Transform)
  id: SetTools(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetTools(Transform)
  nameWithType: IWindowManager.SetTools(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.SetTools(Transform)
  type: Method
  source:
    id: SetTools
    path: ''
    startLine: 34598
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nSets header tools.\n"
  example: []
  syntax:
    content: void SetTools(Transform tools)
    parameters:
    - id: tools
      type: Global.Transform
      description: Content transform.
    content.vb: Sub SetTools(tools As Transform)
  overload: Battlehub.RTEditor.IWindowManager.SetTools*
- uid: Battlehub.RTEditor.IWindowManager.SetLeftBar(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetLeftBar(Transform)
  id: SetLeftBar(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetLeftBar(Transform)
  nameWithType: IWindowManager.SetLeftBar(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.SetLeftBar(Transform)
  type: Method
  source:
    id: SetLeftBar
    path: ''
    startLine: 34604
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nSets left bar.\n"
  example: []
  syntax:
    content: void SetLeftBar(Transform leftBar)
    parameters:
    - id: leftBar
      type: Global.Transform
      description: Left bar transform.
    content.vb: Sub SetLeftBar(leftBar As Transform)
  overload: Battlehub.RTEditor.IWindowManager.SetLeftBar*
- uid: Battlehub.RTEditor.IWindowManager.SetRightBar(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetRightBar(Transform)
  id: SetRightBar(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetRightBar(Transform)
  nameWithType: IWindowManager.SetRightBar(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.SetRightBar(Transform)
  type: Method
  source:
    id: SetRightBar
    path: ''
    startLine: 34610
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nSets right bar.\n"
  example: []
  syntax:
    content: void SetRightBar(Transform rightBar)
    parameters:
    - id: rightBar
      type: Global.Transform
      description: Right bar transform.
    content.vb: Sub SetRightBar(rightBar As Transform)
  overload: Battlehub.RTEditor.IWindowManager.SetRightBar*
- uid: Battlehub.RTEditor.IWindowManager.SetTopBar(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetTopBar(Transform)
  id: SetTopBar(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetTopBar(Transform)
  nameWithType: IWindowManager.SetTopBar(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.SetTopBar(Transform)
  type: Method
  source:
    id: SetTopBar
    path: ''
    startLine: 34616
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nSets top bar.\n"
  example: []
  syntax:
    content: void SetTopBar(Transform topBar)
    parameters:
    - id: topBar
      type: Global.Transform
      description: Top bar transform.
    content.vb: Sub SetTopBar(topBar As Transform)
  overload: Battlehub.RTEditor.IWindowManager.SetTopBar*
- uid: Battlehub.RTEditor.IWindowManager.SetBottomBar(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetBottomBar(Transform)
  id: SetBottomBar(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetBottomBar(Transform)
  nameWithType: IWindowManager.SetBottomBar(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.SetBottomBar(Transform)
  type: Method
  source:
    id: SetBottomBar
    path: ''
    startLine: 34622
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nSets bottom bar.\n"
  example: []
  syntax:
    content: void SetBottomBar(Transform bottomBar)
    parameters:
    - id: bottomBar
      type: Global.Transform
      description: Bottom bar transform.
    content.vb: Sub SetBottomBar(bottomBar As Transform)
  overload: Battlehub.RTEditor.IWindowManager.SetBottomBar*
- uid: Battlehub.RTEditor.IWindowManager.IsWindowRegistered(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.IsWindowRegistered(System.String)
  id: IsWindowRegistered(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: IsWindowRegistered(String)
  nameWithType: IWindowManager.IsWindowRegistered(String)
  fullName: Battlehub.RTEditor.IWindowManager.IsWindowRegistered(System.String)
  type: Method
  source:
    id: IsWindowRegistered
    path: ''
    startLine: 34629
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nDetermines whether a window of the type registered.\n"
  example: []
  syntax:
    content: bool IsWindowRegistered(string windowTypeName)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    return:
      type: System.Boolean
      description: True if window of type registered.
    content.vb: Function IsWindowRegistered(windowTypeName As String) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.IsWindowRegistered*
- uid: Battlehub.RTEditor.IWindowManager.RegisterWindow(Battlehub.RTEditor.CustomWindowDescriptor)
  commentId: M:Battlehub.RTEditor.IWindowManager.RegisterWindow(Battlehub.RTEditor.CustomWindowDescriptor)
  id: RegisterWindow(Battlehub.RTEditor.CustomWindowDescriptor)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: RegisterWindow(CustomWindowDescriptor)
  nameWithType: IWindowManager.RegisterWindow(CustomWindowDescriptor)
  fullName: Battlehub.RTEditor.IWindowManager.RegisterWindow(Battlehub.RTEditor.CustomWindowDescriptor)
  type: Method
  source:
    id: RegisterWindow
    path: ''
    startLine: 34636
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nRegisters window.\n"
  example: []
  syntax:
    content: bool RegisterWindow(CustomWindowDescriptor desc)
    parameters:
    - id: desc
      type: Battlehub.RTEditor.CustomWindowDescriptor
      description: Window descriptor.
    return:
      type: System.Boolean
      description: True if registration succeeded.
    content.vb: Function RegisterWindow(desc As CustomWindowDescriptor) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.RegisterWindow*
- uid: Battlehub.RTEditor.IWindowManager.GetWindowDescriptor(System.String,System.Boolean@)
  commentId: M:Battlehub.RTEditor.IWindowManager.GetWindowDescriptor(System.String,System.Boolean@)
  id: GetWindowDescriptor(System.String,System.Boolean@)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetWindowDescriptor(String, out Boolean)
  nameWithType: IWindowManager.GetWindowDescriptor(String, out Boolean)
  fullName: Battlehub.RTEditor.IWindowManager.GetWindowDescriptor(System.String, out System.Boolean)
  type: Method
  source:
    id: GetWindowDescriptor
    path: ''
    startLine: 34644
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nGets window descriptor.\n"
  example: []
  syntax:
    content: WindowDescriptor GetWindowDescriptor(string windowTypeName, out bool isDialog)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    - id: isDialog
      type: System.Boolean
      description: Is true if the window is a dialog.
    return:
      type: Battlehub.RTEditor.WindowDescriptor
      description: Window descriptor.
    content.vb: Function GetWindowDescriptor(windowTypeName As String, ByRef isDialog As Boolean) As WindowDescriptor
  overload: Battlehub.RTEditor.IWindowManager.GetWindowDescriptor*
  nameWithType.vb: IWindowManager.GetWindowDescriptor(String, ByRef Boolean)
  fullName.vb: Battlehub.RTEditor.IWindowManager.GetWindowDescriptor(System.String, ByRef System.Boolean)
  name.vb: GetWindowDescriptor(String, ByRef Boolean)
- uid: Battlehub.RTEditor.IWindowManager.GetWindowTypeName(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.GetWindowTypeName(Transform)
  id: GetWindowTypeName(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetWindowTypeName(Transform)
  nameWithType: IWindowManager.GetWindowTypeName(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.GetWindowTypeName(Transform)
  type: Method
  source:
    id: GetWindowTypeName
    path: ''
    startLine: 34651
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nGets window type name.\n"
  example: []
  syntax:
    content: string GetWindowTypeName(Transform content)
    parameters:
    - id: content
      type: Global.Transform
      description: Transform of the window.
    return:
      type: System.String
      description: Window type name
    content.vb: Function GetWindowTypeName(content As Transform) As String
  overload: Battlehub.RTEditor.IWindowManager.GetWindowTypeName*
- uid: Battlehub.RTEditor.IWindowManager.GetWindow(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.GetWindow(System.String)
  id: GetWindow(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetWindow(String)
  nameWithType: IWindowManager.GetWindow(String)
  fullName: Battlehub.RTEditor.IWindowManager.GetWindow(System.String)
  type: Method
  source:
    id: GetWindow
    path: ''
    startLine: 34658
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nGets window transform by type.\n"
  example: []
  syntax:
    content: Transform GetWindow(string windowTypeName)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    return:
      type: Global.Transform
      description: Window transform.
    content.vb: Function GetWindow(windowTypeName As String) As Transform
  overload: Battlehub.RTEditor.IWindowManager.GetWindow*
- uid: Battlehub.RTEditor.IWindowManager.GetWindows
  commentId: M:Battlehub.RTEditor.IWindowManager.GetWindows
  id: GetWindows
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetWindows()
  nameWithType: IWindowManager.GetWindows()
  fullName: Battlehub.RTEditor.IWindowManager.GetWindows()
  type: Method
  source:
    id: GetWindows
    path: ''
    startLine: 34664
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nGets transforms of all windows .\n"
  example: []
  syntax:
    content: Transform[] GetWindows()
    return:
      type: Global.Transform[]
      description: Array of transforms.
    content.vb: Function GetWindows As Transform()
  overload: Battlehub.RTEditor.IWindowManager.GetWindows*
- uid: Battlehub.RTEditor.IWindowManager.GetWindows(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.GetWindows(System.String)
  id: GetWindows(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetWindows(String)
  nameWithType: IWindowManager.GetWindows(String)
  fullName: Battlehub.RTEditor.IWindowManager.GetWindows(System.String)
  type: Method
  source:
    id: GetWindows
    path: ''
    startLine: 34671
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nGets transfroms of windows of type.\n"
  example: []
  syntax:
    content: Transform[] GetWindows(string windowTypeName)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    return:
      type: Global.Transform[]
      description: Array of transforms.
    content.vb: Function GetWindows(windowTypeName As String) As Transform()
  overload: Battlehub.RTEditor.IWindowManager.GetWindows*
- uid: Battlehub.RTEditor.IWindowManager.GetComponents(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.GetComponents(Transform)
  id: GetComponents(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetComponents(Transform)
  nameWithType: IWindowManager.GetComponents(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.GetComponents(Transform)
  type: Method
  source:
    id: GetComponents
    path: ''
    startLine: 34678
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nGets extra components associated with the window.\n"
  example: []
  syntax:
    content: Transform[] GetComponents(Transform content)
    parameters:
    - id: content
      type: Global.Transform
      description: Transform of the window.
    return:
      type: Global.Transform[]
      description: Array of extra components.
    content.vb: Function GetComponents(content As Transform) As Transform()
  overload: Battlehub.RTEditor.IWindowManager.GetComponents*
- uid: Battlehub.RTEditor.IWindowManager.Exists(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.Exists(System.String)
  id: Exists(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Exists(String)
  nameWithType: IWindowManager.Exists(String)
  fullName: Battlehub.RTEditor.IWindowManager.Exists(System.String)
  type: Method
  source:
    id: Exists
    path: ''
    startLine: 34685
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nChecks if window of type exists.\n"
  example: []
  syntax:
    content: bool Exists(string windowTypeName)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    return:
      type: System.Boolean
      description: True if window exists.
    content.vb: Function Exists(windowTypeName As String) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.Exists*
- uid: Battlehub.RTEditor.IWindowManager.IsActive(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.IsActive(System.String)
  id: IsActive(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: IsActive(String)
  nameWithType: IWindowManager.IsActive(String)
  fullName: Battlehub.RTEditor.IWindowManager.IsActive(System.String)
  type: Method
  source:
    id: IsActive
    path: ''
    startLine: 34692
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nChecks if the window of this type is in an active state (e.g., if it can receive input).\n"
  example: []
  syntax:
    content: bool IsActive(string windowTypeName)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    return:
      type: System.Boolean
      description: True if window is active.
    content.vb: Function IsActive(windowTypeName As String) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.IsActive*
- uid: Battlehub.RTEditor.IWindowManager.IsActive(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.IsActive(Transform)
  id: IsActive(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: IsActive(Transform)
  nameWithType: IWindowManager.IsActive(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.IsActive(Transform)
  type: Method
  source:
    id: IsActive
    path: ''
    startLine: 34699
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nChecks if the window in in active state (e.g., if it can receive input).\n"
  example: []
  syntax:
    content: bool IsActive(Transform content)
    parameters:
    - id: content
      type: Global.Transform
      description: Transform of the window.
    return:
      type: System.Boolean
      description: True if window is active.
    content.vb: Function IsActive(content As Transform) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.IsActive*
- uid: Battlehub.RTEditor.IWindowManager.FindPointerOverWindow(Battlehub.RTCommon.RuntimeWindow)
  commentId: M:Battlehub.RTEditor.IWindowManager.FindPointerOverWindow(Battlehub.RTCommon.RuntimeWindow)
  id: FindPointerOverWindow(Battlehub.RTCommon.RuntimeWindow)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: FindPointerOverWindow(RuntimeWindow)
  nameWithType: IWindowManager.FindPointerOverWindow(RuntimeWindow)
  fullName: Battlehub.RTEditor.IWindowManager.FindPointerOverWindow(Battlehub.RTCommon.RuntimeWindow)
  type: Method
  source:
    id: FindPointerOverWindow
    path: ''
    startLine: 34706
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nFinds the uppermost window to which pointer is pointing.\n"
  example: []
  syntax:
    content: Transform FindPointerOverWindow(RuntimeWindow exceptWindow)
    parameters:
    - id: exceptWindow
      type: Battlehub.RTCommon.RuntimeWindow
      description: Except window.
    return:
      type: Global.Transform
      description: Transform of the uppermost window to which pointer is pointing.
    content.vb: Function FindPointerOverWindow(exceptWindow As RuntimeWindow) As Transform
  overload: Battlehub.RTEditor.IWindowManager.FindPointerOverWindow*
- uid: Battlehub.RTEditor.IWindowManager.ActivateWindow(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.ActivateWindow(System.String)
  id: ActivateWindow(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: ActivateWindow(String)
  nameWithType: IWindowManager.ActivateWindow(String)
  fullName: Battlehub.RTEditor.IWindowManager.ActivateWindow(System.String)
  type: Method
  source:
    id: ActivateWindow
    path: ''
    startLine: 34713
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nActivates window of type.\n"
  example: []
  syntax:
    content: bool ActivateWindow(string windowTypeName)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    return:
      type: System.Boolean
      description: True if the window is activated.
    content.vb: Function ActivateWindow(windowTypeName As String) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.ActivateWindow*
- uid: Battlehub.RTEditor.IWindowManager.ActivateWindow(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.ActivateWindow(Transform)
  id: ActivateWindow(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: ActivateWindow(Transform)
  nameWithType: IWindowManager.ActivateWindow(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.ActivateWindow(Transform)
  type: Method
  source:
    id: ActivateWindow
    path: ''
    startLine: 34720
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nActivates window of type.\n"
  example: []
  syntax:
    content: bool ActivateWindow(Transform content)
    parameters:
    - id: content
      type: Global.Transform
    return:
      type: System.Boolean
      description: True if the window is activated.
    content.vb: Function ActivateWindow(content As Transform) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.ActivateWindow*
- uid: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@)
  id: CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateWindow(String, out WindowDescriptor)
  nameWithType: IWindowManager.CreateWindow(String, out WindowDescriptor)
  fullName: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String, out Battlehub.RTEditor.WindowDescriptor)
  type: Method
  source:
    id: CreateWindow
    path: ''
    startLine: 34728
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates window of type (this function is mainly used when creating layouts).\n"
  example: []
  syntax:
    content: Transform CreateWindow(string windowTypeName, out WindowDescriptor wd)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name. See BuiltInWindowNames for common window type names.
    - id: wd
      type: Battlehub.RTEditor.WindowDescriptor
      description: The descriptor of the created window.
    return:
      type: Global.Transform
      description: Transform of the created window.
    content.vb: Function CreateWindow(windowTypeName As String, ByRef wd As WindowDescriptor) As Transform
  overload: Battlehub.RTEditor.IWindowManager.CreateWindow*
  nameWithType.vb: IWindowManager.CreateWindow(String, ByRef WindowDescriptor)
  fullName.vb: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String, ByRef Battlehub.RTEditor.WindowDescriptor)
  name.vb: CreateWindow(String, ByRef WindowDescriptor)
- uid: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@,System.Boolean@)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@,System.Boolean@)
  id: CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@,System.Boolean@)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateWindow(String, out WindowDescriptor, out Boolean)
  nameWithType: IWindowManager.CreateWindow(String, out WindowDescriptor, out Boolean)
  fullName: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String, out Battlehub.RTEditor.WindowDescriptor, out System.Boolean)
  type: Method
  source:
    id: CreateWindow
    path: ''
    startLine: 34737
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates window of type (this function is mainly used when creating layouts).\n"
  example: []
  syntax:
    content: Transform CreateWindow(string windowTypeName, out WindowDescriptor wd, out bool isDialog)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name. See BuiltInWindowNames for common window type names.
    - id: wd
      type: Battlehub.RTEditor.WindowDescriptor
      description: The descriptor of the created window.
    - id: isDialog
      type: System.Boolean
      description: True if created window is dialog.
    return:
      type: Global.Transform
      description: Transform of the created window.
    content.vb: Function CreateWindow(windowTypeName As String, ByRef wd As WindowDescriptor, ByRef isDialog As Boolean) As Transform
  overload: Battlehub.RTEditor.IWindowManager.CreateWindow*
  nameWithType.vb: IWindowManager.CreateWindow(String, ByRef WindowDescriptor, ByRef Boolean)
  fullName.vb: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String, ByRef Battlehub.RTEditor.WindowDescriptor, ByRef System.Boolean)
  name.vb: CreateWindow(String, ByRef WindowDescriptor, ByRef Boolean)
- uid: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@,GameObject@,System.Boolean@)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@,GameObject@,System.Boolean@)
  id: CreateWindow(System.String,Battlehub.RTEditor.WindowDescriptor@,GameObject@,System.Boolean@)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateWindow(String, out WindowDescriptor, out GameObject, out Boolean)
  nameWithType: IWindowManager.CreateWindow(String, out WindowDescriptor, out GameObject, out Boolean)
  fullName: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String, out Battlehub.RTEditor.WindowDescriptor, out GameObject, out System.Boolean)
  type: Method
  source:
    id: CreateWindow
    path: ''
    startLine: 34739
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  syntax:
    content: Transform CreateWindow(string windowTypeName, out WindowDescriptor wd, out GameObject content, out bool isDialog)
    parameters:
    - id: windowTypeName
      type: System.String
    - id: wd
      type: Battlehub.RTEditor.WindowDescriptor
    - id: content
      type: Global.GameObject
    - id: isDialog
      type: System.Boolean
    return:
      type: Global.Transform
    content.vb: Function CreateWindow(windowTypeName As String, ByRef wd As WindowDescriptor, ByRef content As GameObject, ByRef isDialog As Boolean) As Transform
  overload: Battlehub.RTEditor.IWindowManager.CreateWindow*
  nameWithType.vb: IWindowManager.CreateWindow(String, ByRef WindowDescriptor, ByRef GameObject, ByRef Boolean)
  fullName.vb: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String, ByRef Battlehub.RTEditor.WindowDescriptor, ByRef GameObject, ByRef System.Boolean)
  name.vb: CreateWindow(String, ByRef WindowDescriptor, ByRef GameObject, ByRef Boolean)
- uid: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,System.Boolean,RegionSplitType,System.Single,Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateWindow(System.String,System.Boolean,RegionSplitType,System.Single,Transform)
  id: CreateWindow(System.String,System.Boolean,RegionSplitType,System.Single,Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateWindow(String, Boolean, RegionSplitType, Single, Transform)
  nameWithType: IWindowManager.CreateWindow(String, Boolean, RegionSplitType, Single, Transform)
  fullName: Battlehub.RTEditor.IWindowManager.CreateWindow(System.String, System.Boolean, RegionSplitType, System.Single, Transform)
  type: Method
  source:
    id: CreateWindow
    path: ''
    startLine: 34750
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates window of type.\n"
  example: []
  syntax:
    content: Transform CreateWindow(string windowTypeName, bool isFree = true, RegionSplitType splitType = null, float flexibleSize = 0.3F, Transform parentWindow = null)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    - id: isFree
      type: System.Boolean
      description: True if windows are to be created in the floating state, and false if in the docked state.
    - id: splitType
      type: Global.RegionSplitType
      description: Determines how to dock the window.
    - id: flexibleSize
      type: System.Single
      description: Window size relative to the docked neighbor [0, 1].
    - id: parentWindow
      type: Global.Transform
      description: Transform of the window with which a group of tabs will be formed or which will be the neighbor of the created window.
    return:
      type: Global.Transform
      description: Transform of the created window.
    content.vb: Function CreateWindow(windowTypeName As String, isFree As Boolean = True, splitType As RegionSplitType = Nothing, flexibleSize As Single = 0.3F, parentWindow As Transform = Nothing) As Transform
  overload: Battlehub.RTEditor.IWindowManager.CreateWindow*
- uid: Battlehub.RTEditor.IWindowManager.CreatePopup(System.String,System.Boolean,System.Single,System.Single)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreatePopup(System.String,System.Boolean,System.Single,System.Single)
  id: CreatePopup(System.String,System.Boolean,System.Single,System.Single)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreatePopup(String, Boolean, Single, Single)
  nameWithType: IWindowManager.CreatePopup(String, Boolean, Single, Single)
  fullName: Battlehub.RTEditor.IWindowManager.CreatePopup(System.String, System.Boolean, System.Single, System.Single)
  type: Method
  source:
    id: CreatePopup
    path: ''
    startLine: 34760
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates popup window of type.\n"
  example: []
  syntax:
    content: Transform CreatePopup(string windowTypeName, bool canResize = false, float minWidth = 10F, float minHeight = 10F)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    - id: canResize
      type: System.Boolean
      description: True to be able to resize the popup.
    - id: minWidth
      type: System.Single
      description: Minimum width of the pop-up window.
    - id: minHeight
      type: System.Single
      description: Minimum height of the pop-up window.
    return:
      type: Global.Transform
      description: Transform of the created popup window.
    content.vb: Function CreatePopup(windowTypeName As String, canResize As Boolean = False, minWidth As Single = 10F, minHeight As Single = 10F) As Transform
  overload: Battlehub.RTEditor.IWindowManager.CreatePopup*
- uid: Battlehub.RTEditor.IWindowManager.ScreenPointToLocalPointInRectangle(RectTransform,Vector3,Vector2@)
  commentId: M:Battlehub.RTEditor.IWindowManager.ScreenPointToLocalPointInRectangle(RectTransform,Vector3,Vector2@)
  id: ScreenPointToLocalPointInRectangle(RectTransform,Vector3,Vector2@)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: ScreenPointToLocalPointInRectangle(RectTransform, Vector3, out Vector2)
  nameWithType: IWindowManager.ScreenPointToLocalPointInRectangle(RectTransform, Vector3, out Vector2)
  fullName: Battlehub.RTEditor.IWindowManager.ScreenPointToLocalPointInRectangle(RectTransform, Vector3, out Vector2)
  type: Method
  source:
    id: ScreenPointToLocalPointInRectangle
    path: ''
    startLine: 34769
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nTransform a screen space point to a position in the local space of a RectTransform that is on the plane of its rectangle.\n"
  example: []
  syntax:
    content: bool ScreenPointToLocalPointInRectangle(RectTransform rectTransform, Vector3 screenPoint, out Vector2 position)
    parameters:
    - id: rectTransform
      type: Global.RectTransform
      description: The RectTransform to find a point inside.
    - id: screenPoint
      type: Global.Vector3
      description: Screen space position.
    - id: position
      type: Global.Vector2
      description: Point in local space of the rect transform.
    return:
      type: System.Boolean
      description: true if the plane of the RectTransform is hit, regardless of whether the point is inside the rectangle.
    content.vb: Function ScreenPointToLocalPointInRectangle(rectTransform As RectTransform, screenPoint As Vector3, ByRef position As Vector2) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.ScreenPointToLocalPointInRectangle*
  nameWithType.vb: IWindowManager.ScreenPointToLocalPointInRectangle(RectTransform, Vector3, ByRef Vector2)
  fullName.vb: Battlehub.RTEditor.IWindowManager.ScreenPointToLocalPointInRectangle(RectTransform, Vector3, ByRef Vector2)
  name.vb: ScreenPointToLocalPointInRectangle(RectTransform, Vector3, ByRef Vector2)
- uid: Battlehub.RTEditor.IWindowManager.CreatePopup(System.String,Vector2,System.Boolean,System.Single,System.Single)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreatePopup(System.String,Vector2,System.Boolean,System.Single,System.Single)
  id: CreatePopup(System.String,Vector2,System.Boolean,System.Single,System.Single)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreatePopup(String, Vector2, Boolean, Single, Single)
  nameWithType: IWindowManager.CreatePopup(String, Vector2, Boolean, Single, Single)
  fullName: Battlehub.RTEditor.IWindowManager.CreatePopup(System.String, Vector2, System.Boolean, System.Single, System.Single)
  type: Method
  source:
    id: CreatePopup
    path: ''
    startLine: 34780
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates popup window of type\n"
  example: []
  syntax:
    content: Transform CreatePopup(string windowTypeName, Vector2 position, bool canResize = false, float minWidth = 10F, float minHeight = 10F)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    - id: position
      type: Global.Vector2
      description: Position in IWindowManager.PopupRoot coordinates.
    - id: canResize
      type: System.Boolean
      description: True to be able to resize the popup.
    - id: minWidth
      type: System.Single
      description: Minimum width of the pop-up window.
    - id: minHeight
      type: System.Single
      description: Minimum height of the pop-up window.
    return:
      type: Global.Transform
      description: Transform of the created popup window.
    content.vb: Function CreatePopup(windowTypeName As String, position As Vector2, canResize As Boolean = False, minWidth As Single = 10F, minHeight As Single = 10F) As Transform
  overload: Battlehub.RTEditor.IWindowManager.CreatePopup*
- uid: Battlehub.RTEditor.IWindowManager.CreateDropdown(System.String,RectTransform,System.Boolean,System.Single,System.Single)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateDropdown(System.String,RectTransform,System.Boolean,System.Single,System.Single)
  id: CreateDropdown(System.String,RectTransform,System.Boolean,System.Single,System.Single)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateDropdown(String, RectTransform, Boolean, Single, Single)
  nameWithType: IWindowManager.CreateDropdown(String, RectTransform, Boolean, Single, Single)
  fullName: Battlehub.RTEditor.IWindowManager.CreateDropdown(System.String, RectTransform, System.Boolean, System.Single, System.Single)
  type: Method
  source:
    id: CreateDropdown
    path: ''
    startLine: 34791
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates dropdown window of type.\n"
  example: []
  syntax:
    content: Transform CreateDropdown(string windowTypeName, RectTransform anchor, bool canResize = false, float minWidth = 10F, float minHeight = 10F)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    - id: anchor
      type: Global.RectTransform
      description: The RectTransform of dropdown anchor.
    - id: canResize
      type: System.Boolean
      description: True to be able to resize the dropdown.
    - id: minWidth
      type: System.Single
      description: Minimum width of the pop-up window.
    - id: minHeight
      type: System.Single
      description: Minimum height of the pop-up window.
    return:
      type: Global.Transform
      description: ''
    content.vb: Function CreateDropdown(windowTypeName As String, anchor As RectTransform, canResize As Boolean = False, minWidth As Single = 10F, minHeight As Single = 10F) As Transform
  overload: Battlehub.RTEditor.IWindowManager.CreateDropdown*
- uid: Battlehub.RTEditor.IWindowManager.SetWindowArgs(Transform,System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetWindowArgs(Transform,System.String)
  id: SetWindowArgs(Transform,System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetWindowArgs(Transform, String)
  nameWithType: IWindowManager.SetWindowArgs(Transform, String)
  fullName: Battlehub.RTEditor.IWindowManager.SetWindowArgs(Transform, System.String)
  type: Method
  source:
    id: SetWindowArgs
    path: ''
    startLine: 34798
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nSets window arguments.\n"
  example: []
  syntax:
    content: void SetWindowArgs(Transform content, string args)
    parameters:
    - id: content
      type: Global.Transform
      description: Transform of the window.
    - id: args
      type: System.String
      description: Arguments.
    content.vb: Sub SetWindowArgs(content As Transform, args As String)
  overload: Battlehub.RTEditor.IWindowManager.SetWindowArgs*
- uid: Battlehub.RTEditor.IWindowManager.DestroyWindow(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.DestroyWindow(Transform)
  id: DestroyWindow(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: DestroyWindow(Transform)
  nameWithType: IWindowManager.DestroyWindow(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.DestroyWindow(Transform)
  type: Method
  source:
    id: DestroyWindow
    path: ''
    startLine: 34804
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nDestroys window.\n"
  example: []
  syntax:
    content: void DestroyWindow(Transform conent)
    parameters:
    - id: conent
      type: Global.Transform
      description: Transform of the window.
    content.vb: Sub DestroyWindow(conent As Transform)
  overload: Battlehub.RTEditor.IWindowManager.DestroyWindow*
- uid: Battlehub.RTEditor.IWindowManager.DestroyWindowsOfType(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.DestroyWindowsOfType(System.String)
  id: DestroyWindowsOfType(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: DestroyWindowsOfType(String)
  nameWithType: IWindowManager.DestroyWindowsOfType(String)
  fullName: Battlehub.RTEditor.IWindowManager.DestroyWindowsOfType(System.String)
  type: Method
  source:
    id: DestroyWindowsOfType
    path: ''
    startLine: 34810
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nDestroys window of type.\n"
  example: []
  syntax:
    content: void DestroyWindowsOfType(string windowTypeName)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    content.vb: Sub DestroyWindowsOfType(windowTypeName As String)
  overload: Battlehub.RTEditor.IWindowManager.DestroyWindowsOfType*
- uid: Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.Boolean,System.Single,System.Single)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.Boolean,System.Single,System.Single)
  id: CreateDialogWindow(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.Boolean,System.Single,System.Single)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateDialogWindow(String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, Boolean, Single, Single)
  nameWithType: IWindowManager.CreateDialogWindow(String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, Boolean, Single, Single)
  fullName: Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String, System.String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, System.Boolean, System.Single, System.Single)
  type: Method
  source:
    id: CreateDialogWindow
    path: ''
    startLine: 34823
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates dialog window.\n"
  example: []
  syntax:
    content: Transform CreateDialogWindow(string windowTypeName, string header, DialogAction<DialogCancelArgs> okAction, DialogAction<DialogCancelArgs> cancelAction, bool canResize, float minWidth = 50F, float minHeight = 50F)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    - id: header
      type: System.String
      description: Dialog header text.
    - id: okAction
      type: Global.DialogAction{DialogCancelArgs}
      description: The action to take when the OK button is clicked.
    - id: cancelAction
      type: Global.DialogAction{DialogCancelArgs}
      description: The action to take when the Cancel button is clicked.
    - id: canResize
      type: System.Boolean
      description: True to be able to resize the dialog.
    - id: minWidth
      type: System.Single
      description: Minimum width of the pop-up window.
    - id: minHeight
      type: System.Single
      description: Minimum height of the pop-up window.
    return:
      type: Global.Transform
      description: ''
    content.vb: Function CreateDialogWindow(windowTypeName As String, header As String, okAction As DialogAction(Of DialogCancelArgs), cancelAction As DialogAction(Of DialogCancelArgs), canResize As Boolean, minWidth As Single = 50F, minHeight As Single = 50F) As Transform
  overload: Battlehub.RTEditor.IWindowManager.CreateDialogWindow*
  nameWithType.vb: IWindowManager.CreateDialogWindow(String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), Boolean, Single, Single)
  fullName.vb: Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String, System.String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), System.Boolean, System.Single, System.Single)
  name.vb: CreateDialogWindow(String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), Boolean, Single, Single)
- uid: Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.Single,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.Single,System.Single,System.Single,System.Single,System.Boolean)
  id: CreateDialogWindow(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.Single,System.Single,System.Single,System.Single,System.Boolean)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CreateDialogWindow(String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, Single, Single, Single, Single, Boolean)
  nameWithType: IWindowManager.CreateDialogWindow(String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, Single, Single, Single, Single, Boolean)
  fullName: Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String, System.String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, System.Single, System.Single, System.Single, System.Single, System.Boolean)
  type: Method
  source:
    id: CreateDialogWindow
    path: ''
    startLine: 34841
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates dialog window.\n"
  example: []
  syntax:
    content: Transform CreateDialogWindow(string windowTypeName, string header, DialogAction<DialogCancelArgs> okAction = null, DialogAction<DialogCancelArgs> cancelAction = null, float minWidth = 250F, float minHeight = 250F, float preferredWidth = 700F, float preferredHeight = 400F, bool canResize = true)
    parameters:
    - id: windowTypeName
      type: System.String
      description: Window type name.
    - id: header
      type: System.String
      description: Dialog header text.
    - id: okAction
      type: Global.DialogAction{DialogCancelArgs}
      description: The action to take when the OK button is clicked.
    - id: cancelAction
      type: Global.DialogAction{DialogCancelArgs}
      description: he action to take when the Cancel button is clicked.
    - id: minWidth
      type: System.Single
      description: Minimum width of the pop-up window.
    - id: minHeight
      type: System.Single
      description: Minimum height of the pop-up window.
    - id: preferredWidth
      type: System.Single
      description: Perferred width of the pop-up window.
    - id: preferredHeight
      type: System.Single
      description: Perferred height of the pop-up window.
    - id: canResize
      type: System.Boolean
      description: True to be able to resize the dialog.
    return:
      type: Global.Transform
      description: ''
    content.vb: Function CreateDialogWindow(windowTypeName As String, header As String, okAction As DialogAction(Of DialogCancelArgs) = Nothing, cancelAction As DialogAction(Of DialogCancelArgs) = Nothing, minWidth As Single = 250F, minHeight As Single = 250F, preferredWidth As Single = 700F, preferredHeight As Single = 400F, canResize As Boolean = True) As Transform
  overload: Battlehub.RTEditor.IWindowManager.CreateDialogWindow*
  nameWithType.vb: IWindowManager.CreateDialogWindow(String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), Single, Single, Single, Single, Boolean)
  fullName.vb: Battlehub.RTEditor.IWindowManager.CreateDialogWindow(System.String, System.String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), System.Single, System.Single, System.Single, System.Single, System.Boolean)
  name.vb: CreateDialogWindow(String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), Single, Single, Single, Single, Boolean)
- uid: Battlehub.RTEditor.IWindowManager.DestroyDialogWindow
  commentId: M:Battlehub.RTEditor.IWindowManager.DestroyDialogWindow
  id: DestroyDialogWindow
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: DestroyDialogWindow()
  nameWithType: IWindowManager.DestroyDialogWindow()
  fullName: Battlehub.RTEditor.IWindowManager.DestroyDialogWindow()
  type: Method
  source:
    id: DestroyDialogWindow
    path: ''
    startLine: 34851
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nDestroys the topmost dialog window.\n"
  example: []
  syntax:
    content: void DestroyDialogWindow()
    content.vb: Sub DestroyDialogWindow
  overload: Battlehub.RTEditor.IWindowManager.DestroyDialogWindow*
- uid: Battlehub.RTEditor.IWindowManager.MessageBox(System.String,System.String,DialogAction{DialogCancelArgs})
  commentId: M:Battlehub.RTEditor.IWindowManager.MessageBox(System.String,System.String,DialogAction{DialogCancelArgs})
  id: MessageBox(System.String,System.String,DialogAction{DialogCancelArgs})
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: MessageBox(String, String, DialogAction<DialogCancelArgs>)
  nameWithType: IWindowManager.MessageBox(String, String, DialogAction<DialogCancelArgs>)
  fullName: Battlehub.RTEditor.IWindowManager.MessageBox(System.String, System.String, DialogAction<DialogCancelArgs>)
  type: Method
  source:
    id: MessageBox
    path: ''
    startLine: 34859
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates message box.\n"
  example: []
  syntax:
    content: void MessageBox(string header, string text, DialogAction<DialogCancelArgs> ok = null)
    parameters:
    - id: header
      type: System.String
      description: Header text.
    - id: text
      type: System.String
      description: Message text.
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
      description: Ok action.
    content.vb: Sub MessageBox(header As String, text As String, ok As DialogAction(Of DialogCancelArgs) = Nothing)
  overload: Battlehub.RTEditor.IWindowManager.MessageBox*
  nameWithType.vb: IWindowManager.MessageBox(String, String, DialogAction(Of DialogCancelArgs))
  fullName.vb: Battlehub.RTEditor.IWindowManager.MessageBox(System.String, System.String, DialogAction(Of DialogCancelArgs))
  name.vb: MessageBox(String, String, DialogAction(Of DialogCancelArgs))
- uid: Battlehub.RTEditor.IWindowManager.MessageBox(Sprite,System.String,System.String,DialogAction{DialogCancelArgs})
  commentId: M:Battlehub.RTEditor.IWindowManager.MessageBox(Sprite,System.String,System.String,DialogAction{DialogCancelArgs})
  id: MessageBox(Sprite,System.String,System.String,DialogAction{DialogCancelArgs})
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: MessageBox(Sprite, String, String, DialogAction<DialogCancelArgs>)
  nameWithType: IWindowManager.MessageBox(Sprite, String, String, DialogAction<DialogCancelArgs>)
  fullName: Battlehub.RTEditor.IWindowManager.MessageBox(Sprite, System.String, System.String, DialogAction<DialogCancelArgs>)
  type: Method
  source:
    id: MessageBox
    path: ''
    startLine: 34868
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates message box.\n"
  example: []
  syntax:
    content: void MessageBox(Sprite icon, string header, string text, DialogAction<DialogCancelArgs> ok = null)
    parameters:
    - id: icon
      type: Global.Sprite
      description: Header icon.
    - id: header
      type: System.String
      description: Header text.
    - id: text
      type: System.String
      description: Message text.
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
      description: Ok action.
    content.vb: Sub MessageBox(icon As Sprite, header As String, text As String, ok As DialogAction(Of DialogCancelArgs) = Nothing)
  overload: Battlehub.RTEditor.IWindowManager.MessageBox*
  nameWithType.vb: IWindowManager.MessageBox(Sprite, String, String, DialogAction(Of DialogCancelArgs))
  fullName.vb: Battlehub.RTEditor.IWindowManager.MessageBox(Sprite, System.String, System.String, DialogAction(Of DialogCancelArgs))
  name.vb: MessageBox(Sprite, String, String, DialogAction(Of DialogCancelArgs))
- uid: Battlehub.RTEditor.IWindowManager.Confirmation(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.Confirmation(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String)
  id: Confirmation(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Confirmation(String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String)
  nameWithType: IWindowManager.Confirmation(String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String)
  fullName: Battlehub.RTEditor.IWindowManager.Confirmation(System.String, System.String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, System.String, System.String)
  type: Method
  source:
    id: Confirmation
    path: ''
    startLine: 34879
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates confirmation dialog.\n"
  example: []
  syntax:
    content: void Confirmation(string header, string text, DialogAction<DialogCancelArgs> ok, DialogAction<DialogCancelArgs> cancel, string okText = "OK", string cancelText = "Cancel")
    parameters:
    - id: header
      type: System.String
      description: Header text.
    - id: text
      type: System.String
      description: Message text.
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
      description: Ok action.
    - id: cancel
      type: Global.DialogAction{DialogCancelArgs}
      description: Cancel action.
    - id: okText
      type: System.String
      description: Ok button text.
    - id: cancelText
      type: System.String
      description: Cancel button text.
    content.vb: Sub Confirmation(header As String, text As String, ok As DialogAction(Of DialogCancelArgs), cancel As DialogAction(Of DialogCancelArgs), okText As String = "OK", cancelText As String = "Cancel")
  overload: Battlehub.RTEditor.IWindowManager.Confirmation*
  nameWithType.vb: IWindowManager.Confirmation(String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Confirmation(System.String, System.String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), System.String, System.String)
  name.vb: Confirmation(String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String)
- uid: Battlehub.RTEditor.IWindowManager.Confirmation(Sprite,System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.Confirmation(Sprite,System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String)
  id: Confirmation(Sprite,System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Confirmation(Sprite, String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String)
  nameWithType: IWindowManager.Confirmation(Sprite, String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String)
  fullName: Battlehub.RTEditor.IWindowManager.Confirmation(Sprite, System.String, System.String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, System.String, System.String)
  type: Method
  source:
    id: Confirmation
    path: ''
    startLine: 34891
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates confirmation dialog.\n"
  example: []
  syntax:
    content: void Confirmation(Sprite icon, string header, string text, DialogAction<DialogCancelArgs> ok, DialogAction<DialogCancelArgs> cancel, string okText = "OK", string cancelText = "Cancel")
    parameters:
    - id: icon
      type: Global.Sprite
      description: Header icon.
    - id: header
      type: System.String
      description: Header text.
    - id: text
      type: System.String
      description: Mesasge text.
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
      description: Ok action.
    - id: cancel
      type: Global.DialogAction{DialogCancelArgs}
      description: Cancel action.
    - id: okText
      type: System.String
      description: Ok button text.
    - id: cancelText
      type: System.String
      description: Cancel button text.
    content.vb: Sub Confirmation(icon As Sprite, header As String, text As String, ok As DialogAction(Of DialogCancelArgs), cancel As DialogAction(Of DialogCancelArgs), okText As String = "OK", cancelText As String = "Cancel")
  overload: Battlehub.RTEditor.IWindowManager.Confirmation*
  nameWithType.vb: IWindowManager.Confirmation(Sprite, String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Confirmation(Sprite, System.String, System.String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), System.String, System.String)
  name.vb: Confirmation(Sprite, String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String)
- uid: Battlehub.RTEditor.IWindowManager.Confirmation(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.Confirmation(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.String)
  id: Confirmation(System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Confirmation(String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String, String)
  nameWithType: IWindowManager.Confirmation(String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String, String)
  fullName: Battlehub.RTEditor.IWindowManager.Confirmation(System.String, System.String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, System.String, System.String, System.String)
  type: Method
  source:
    id: Confirmation
    path: ''
    startLine: 34904
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates 3 button confirmation dialog.\n"
  example: []
  syntax:
    content: void Confirmation(string header, string text, DialogAction<DialogCancelArgs> ok, DialogAction<DialogCancelArgs> cancel, DialogAction<DialogCancelArgs> alt, string okText = "OK", string cancelText = "Cancel", string altText = "Close")
    parameters:
    - id: header
      type: System.String
      description: Header text.
    - id: text
      type: System.String
      description: Message text.
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
      description: Ok action.
    - id: cancel
      type: Global.DialogAction{DialogCancelArgs}
      description: Cancel action.
    - id: alt
      type: Global.DialogAction{DialogCancelArgs}
      description: Alternative action.
    - id: okText
      type: System.String
      description: Ok button text.
    - id: cancelText
      type: System.String
      description: Cancel button text.
    - id: altText
      type: System.String
      description: Alternative button text.
    content.vb: Sub Confirmation(header As String, text As String, ok As DialogAction(Of DialogCancelArgs), cancel As DialogAction(Of DialogCancelArgs), alt As DialogAction(Of DialogCancelArgs), okText As String = "OK", cancelText As String = "Cancel", altText As String = "Close")
  overload: Battlehub.RTEditor.IWindowManager.Confirmation*
  nameWithType.vb: IWindowManager.Confirmation(String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String, String)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Confirmation(System.String, System.String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), System.String, System.String, System.String)
  name.vb: Confirmation(String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String, String)
- uid: Battlehub.RTEditor.IWindowManager.Confirmation(Sprite,System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.Confirmation(Sprite,System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.String)
  id: Confirmation(Sprite,System.String,System.String,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Confirmation(Sprite, String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String, String)
  nameWithType: IWindowManager.Confirmation(Sprite, String, String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String, String)
  fullName: Battlehub.RTEditor.IWindowManager.Confirmation(Sprite, System.String, System.String, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, System.String, System.String, System.String)
  type: Method
  source:
    id: Confirmation
    path: ''
    startLine: 34918
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates 3 button confirmation dialog.\n"
  example: []
  syntax:
    content: void Confirmation(Sprite icon, string header, string text, DialogAction<DialogCancelArgs> ok, DialogAction<DialogCancelArgs> cancel, DialogAction<DialogCancelArgs> alt, string okText = "OK", string cancelText = "Cancel", string altText = "Close")
    parameters:
    - id: icon
      type: Global.Sprite
      description: Header icon.
    - id: header
      type: System.String
      description: Header text.
    - id: text
      type: System.String
      description: Message text.
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
      description: Ok action.
    - id: cancel
      type: Global.DialogAction{DialogCancelArgs}
      description: Cancel action.
    - id: alt
      type: Global.DialogAction{DialogCancelArgs}
      description: Alternative action.
    - id: okText
      type: System.String
      description: Ok button text.
    - id: cancelText
      type: System.String
      description: Cancel button text.
    - id: altText
      type: System.String
      description: Alternative button text.
    content.vb: Sub Confirmation(icon As Sprite, header As String, text As String, ok As DialogAction(Of DialogCancelArgs), cancel As DialogAction(Of DialogCancelArgs), alt As DialogAction(Of DialogCancelArgs), okText As String = "OK", cancelText As String = "Cancel", altText As String = "Close")
  overload: Battlehub.RTEditor.IWindowManager.Confirmation*
  nameWithType.vb: IWindowManager.Confirmation(Sprite, String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String, String)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Confirmation(Sprite, System.String, System.String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), System.String, System.String, System.String)
  name.vb: Confirmation(Sprite, String, String, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String, String)
- uid: Battlehub.RTEditor.IWindowManager.Prompt(System.String,System.String,DialogAction{Battlehub.RTEditor.PromptDialogArgs},DialogAction{Battlehub.RTEditor.PromptDialogArgs},System.String,System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.Prompt(System.String,System.String,DialogAction{Battlehub.RTEditor.PromptDialogArgs},DialogAction{Battlehub.RTEditor.PromptDialogArgs},System.String,System.String)
  id: Prompt(System.String,System.String,DialogAction{Battlehub.RTEditor.PromptDialogArgs},DialogAction{Battlehub.RTEditor.PromptDialogArgs},System.String,System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Prompt(String, String, DialogAction<PromptDialogArgs>, DialogAction<PromptDialogArgs>, String, String)
  nameWithType: IWindowManager.Prompt(String, String, DialogAction<PromptDialogArgs>, DialogAction<PromptDialogArgs>, String, String)
  fullName: Battlehub.RTEditor.IWindowManager.Prompt(System.String, System.String, DialogAction<Battlehub.RTEditor.PromptDialogArgs>, DialogAction<Battlehub.RTEditor.PromptDialogArgs>, System.String, System.String)
  type: Method
  source:
    id: Prompt
    path: ''
    startLine: 34929
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates prompt dialog.\n"
  example: []
  syntax:
    content: void Prompt(string header, string text, DialogAction<PromptDialogArgs> ok, DialogAction<PromptDialogArgs> cancel = null, string okText = "OK", string cancelText = "Cancel")
    parameters:
    - id: header
      type: System.String
      description: Header text.
    - id: text
      type: System.String
      description: Input field text.
    - id: ok
      type: Global.DialogAction{Battlehub.RTEditor.PromptDialogArgs}
      description: Ok action.
    - id: cancel
      type: Global.DialogAction{Battlehub.RTEditor.PromptDialogArgs}
      description: Cancel action.
    - id: okText
      type: System.String
      description: Ok button text.
    - id: cancelText
      type: System.String
      description: Cancel button text.
    content.vb: Sub Prompt(header As String, text As String, ok As DialogAction(Of PromptDialogArgs), cancel As DialogAction(Of PromptDialogArgs) = Nothing, okText As String = "OK", cancelText As String = "Cancel")
  overload: Battlehub.RTEditor.IWindowManager.Prompt*
  nameWithType.vb: IWindowManager.Prompt(String, String, DialogAction(Of PromptDialogArgs), DialogAction(Of PromptDialogArgs), String, String)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Prompt(System.String, System.String, DialogAction(Of Battlehub.RTEditor.PromptDialogArgs), DialogAction(Of Battlehub.RTEditor.PromptDialogArgs), System.String, System.String)
  name.vb: Prompt(String, String, DialogAction(Of PromptDialogArgs), DialogAction(Of PromptDialogArgs), String, String)
- uid: Battlehub.RTEditor.IWindowManager.Prompt(Sprite,System.String,System.String,DialogAction{Battlehub.RTEditor.PromptDialogArgs},DialogAction{Battlehub.RTEditor.PromptDialogArgs},System.String,System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.Prompt(Sprite,System.String,System.String,DialogAction{Battlehub.RTEditor.PromptDialogArgs},DialogAction{Battlehub.RTEditor.PromptDialogArgs},System.String,System.String)
  id: Prompt(Sprite,System.String,System.String,DialogAction{Battlehub.RTEditor.PromptDialogArgs},DialogAction{Battlehub.RTEditor.PromptDialogArgs},System.String,System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Prompt(Sprite, String, String, DialogAction<PromptDialogArgs>, DialogAction<PromptDialogArgs>, String, String)
  nameWithType: IWindowManager.Prompt(Sprite, String, String, DialogAction<PromptDialogArgs>, DialogAction<PromptDialogArgs>, String, String)
  fullName: Battlehub.RTEditor.IWindowManager.Prompt(Sprite, System.String, System.String, DialogAction<Battlehub.RTEditor.PromptDialogArgs>, DialogAction<Battlehub.RTEditor.PromptDialogArgs>, System.String, System.String)
  type: Method
  source:
    id: Prompt
    path: ''
    startLine: 34941
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates prompt dialog.\n"
  example: []
  syntax:
    content: void Prompt(Sprite icon, string header, string text, DialogAction<PromptDialogArgs> ok, DialogAction<PromptDialogArgs> cancel = null, string okText = "OK", string cancelText = "Cancel")
    parameters:
    - id: icon
      type: Global.Sprite
      description: Header icon.
    - id: header
      type: System.String
      description: Header text.
    - id: text
      type: System.String
      description: Input field text.
    - id: ok
      type: Global.DialogAction{Battlehub.RTEditor.PromptDialogArgs}
      description: Ok action.
    - id: cancel
      type: Global.DialogAction{Battlehub.RTEditor.PromptDialogArgs}
      description: Cancel action.
    - id: okText
      type: System.String
      description: Ok button text.
    - id: cancelText
      type: System.String
      description: Cancel button text.
    content.vb: Sub Prompt(icon As Sprite, header As String, text As String, ok As DialogAction(Of PromptDialogArgs), cancel As DialogAction(Of PromptDialogArgs) = Nothing, okText As String = "OK", cancelText As String = "Cancel")
  overload: Battlehub.RTEditor.IWindowManager.Prompt*
  nameWithType.vb: IWindowManager.Prompt(Sprite, String, String, DialogAction(Of PromptDialogArgs), DialogAction(Of PromptDialogArgs), String, String)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Prompt(Sprite, System.String, System.String, DialogAction(Of Battlehub.RTEditor.PromptDialogArgs), DialogAction(Of Battlehub.RTEditor.PromptDialogArgs), System.String, System.String)
  name.vb: Prompt(Sprite, String, String, DialogAction(Of PromptDialogArgs), DialogAction(Of PromptDialogArgs), String, String)
- uid: Battlehub.RTEditor.IWindowManager.Dialog(Sprite,System.String,Transform,DialogAction{DialogCancelArgs},System.String,DialogAction{DialogCancelArgs},System.String,System.Boolean,System.Single,System.Single)
  commentId: M:Battlehub.RTEditor.IWindowManager.Dialog(Sprite,System.String,Transform,DialogAction{DialogCancelArgs},System.String,DialogAction{DialogCancelArgs},System.String,System.Boolean,System.Single,System.Single)
  id: Dialog(Sprite,System.String,Transform,DialogAction{DialogCancelArgs},System.String,DialogAction{DialogCancelArgs},System.String,System.Boolean,System.Single,System.Single)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Dialog(Sprite, String, Transform, DialogAction<DialogCancelArgs>, String, DialogAction<DialogCancelArgs>, String, Boolean, Single, Single)
  nameWithType: IWindowManager.Dialog(Sprite, String, Transform, DialogAction<DialogCancelArgs>, String, DialogAction<DialogCancelArgs>, String, Boolean, Single, Single)
  fullName: Battlehub.RTEditor.IWindowManager.Dialog(Sprite, System.String, Transform, DialogAction<DialogCancelArgs>, System.String, DialogAction<DialogCancelArgs>, System.String, System.Boolean, System.Single, System.Single)
  type: Method
  source:
    id: Dialog
    path: ''
    startLine: 34956
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates dialog.\n"
  example: []
  syntax:
    content: void Dialog(Sprite icon, string header, Transform content, DialogAction<DialogCancelArgs> ok, string okText = "OK", DialogAction<DialogCancelArgs> cancel = null, string cancelText = "Cancel", bool canResize = false, float minWidth = 150F, float minHeight = 100F)
    parameters:
    - id: icon
      type: Global.Sprite
      description: Header icon.
    - id: header
      type: System.String
      description: Header text.
    - id: content
      type: Global.Transform
      description: Dialog content transform.
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
      description: Ok Action.
    - id: okText
      type: System.String
      description: Ok button text.
    - id: cancel
      type: Global.DialogAction{DialogCancelArgs}
      description: Cancel action.
    - id: cancelText
      type: System.String
      description: Cancel button text.
    - id: canResize
      type: System.Boolean
      description: True to be able to resize the dialog.
    - id: minWidth
      type: System.Single
      description: Minimum width of the dialog.
    - id: minHeight
      type: System.Single
      description: Minimum height of the dialog.
    content.vb: Sub Dialog(icon As Sprite, header As String, content As Transform, ok As DialogAction(Of DialogCancelArgs), okText As String = "OK", cancel As DialogAction(Of DialogCancelArgs) = Nothing, cancelText As String = "Cancel", canResize As Boolean = False, minWidth As Single = 150F, minHeight As Single = 100F)
  overload: Battlehub.RTEditor.IWindowManager.Dialog*
  nameWithType.vb: IWindowManager.Dialog(Sprite, String, Transform, DialogAction(Of DialogCancelArgs), String, DialogAction(Of DialogCancelArgs), String, Boolean, Single, Single)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Dialog(Sprite, System.String, Transform, DialogAction(Of DialogCancelArgs), System.String, DialogAction(Of DialogCancelArgs), System.String, System.Boolean, System.Single, System.Single)
  name.vb: Dialog(Sprite, String, Transform, DialogAction(Of DialogCancelArgs), String, DialogAction(Of DialogCancelArgs), String, Boolean, Single, Single)
- uid: Battlehub.RTEditor.IWindowManager.Dialog(System.String,Transform,DialogAction{DialogCancelArgs},System.String,DialogAction{DialogCancelArgs},System.String,System.Boolean,System.Single,System.Single)
  commentId: M:Battlehub.RTEditor.IWindowManager.Dialog(System.String,Transform,DialogAction{DialogCancelArgs},System.String,DialogAction{DialogCancelArgs},System.String,System.Boolean,System.Single,System.Single)
  id: Dialog(System.String,Transform,DialogAction{DialogCancelArgs},System.String,DialogAction{DialogCancelArgs},System.String,System.Boolean,System.Single,System.Single)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Dialog(String, Transform, DialogAction<DialogCancelArgs>, String, DialogAction<DialogCancelArgs>, String, Boolean, Single, Single)
  nameWithType: IWindowManager.Dialog(String, Transform, DialogAction<DialogCancelArgs>, String, DialogAction<DialogCancelArgs>, String, Boolean, Single, Single)
  fullName: Battlehub.RTEditor.IWindowManager.Dialog(System.String, Transform, DialogAction<DialogCancelArgs>, System.String, DialogAction<DialogCancelArgs>, System.String, System.Boolean, System.Single, System.Single)
  type: Method
  source:
    id: Dialog
    path: ''
    startLine: 34973
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates dialog.\n"
  example: []
  syntax:
    content: void Dialog(string header, Transform content, DialogAction<DialogCancelArgs> ok, string okText = "OK", DialogAction<DialogCancelArgs> cancel = null, string cancelText = "Cancel", bool canResize = false, float minWidth = 150F, float minHeight = 100F)
    parameters:
    - id: header
      type: System.String
      description: Header text.
    - id: content
      type: Global.Transform
      description: Dialog content transform.
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
      description: Ok Action.
    - id: okText
      type: System.String
      description: Ok button text.
    - id: cancel
      type: Global.DialogAction{DialogCancelArgs}
      description: Cancel action.
    - id: cancelText
      type: System.String
      description: Cancel button text.
    - id: canResize
      type: System.Boolean
      description: True to be able to resize the dialog.
    - id: minWidth
      type: System.Single
      description: Minimum width of the dialog.
    - id: minHeight
      type: System.Single
      description: Minimum height of the dialog.
    content.vb: Sub Dialog(header As String, content As Transform, ok As DialogAction(Of DialogCancelArgs), okText As String = "OK", cancel As DialogAction(Of DialogCancelArgs) = Nothing, cancelText As String = "Cancel", canResize As Boolean = False, minWidth As Single = 150F, minHeight As Single = 100F)
  overload: Battlehub.RTEditor.IWindowManager.Dialog*
  nameWithType.vb: IWindowManager.Dialog(String, Transform, DialogAction(Of DialogCancelArgs), String, DialogAction(Of DialogCancelArgs), String, Boolean, Single, Single)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Dialog(System.String, Transform, DialogAction(Of DialogCancelArgs), System.String, DialogAction(Of DialogCancelArgs), System.String, System.Boolean, System.Single, System.Single)
  name.vb: Dialog(String, Transform, DialogAction(Of DialogCancelArgs), String, DialogAction(Of DialogCancelArgs), String, Boolean, Single, Single)
- uid: Battlehub.RTEditor.IWindowManager.Dialog(System.String,Transform,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:Battlehub.RTEditor.IWindowManager.Dialog(System.String,Transform,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  id: Dialog(System.String,Transform,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Dialog(String, Transform, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String, Single, Single, Single, Single, Boolean)
  nameWithType: IWindowManager.Dialog(String, Transform, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String, Single, Single, Single, Single, Boolean)
  fullName: Battlehub.RTEditor.IWindowManager.Dialog(System.String, Transform, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, System.String, System.String, System.Single, System.Single, System.Single, System.Single, System.Boolean)
  type: Method
  source:
    id: Dialog
    path: ''
    startLine: 34981
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates dialog.\n"
  example: []
  syntax:
    content: void Dialog(string header, Transform content, DialogAction<DialogCancelArgs> ok, DialogAction<DialogCancelArgs> cancel, string okText = "OK", string cancelText = "Cancel", float minWidth = 150F, float minHeight = 150F, float preferredWidth = 700F, float preferredHeight = 400F, bool canResize = true)
    parameters:
    - id: header
      type: System.String
    - id: content
      type: Global.Transform
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
    - id: cancel
      type: Global.DialogAction{DialogCancelArgs}
    - id: okText
      type: System.String
    - id: cancelText
      type: System.String
    - id: minWidth
      type: System.Single
    - id: minHeight
      type: System.Single
    - id: preferredWidth
      type: System.Single
    - id: preferredHeight
      type: System.Single
    - id: canResize
      type: System.Boolean
    content.vb: Sub Dialog(header As String, content As Transform, ok As DialogAction(Of DialogCancelArgs), cancel As DialogAction(Of DialogCancelArgs), okText As String = "OK", cancelText As String = "Cancel", minWidth As Single = 150F, minHeight As Single = 150F, preferredWidth As Single = 700F, preferredHeight As Single = 400F, canResize As Boolean = True)
  overload: Battlehub.RTEditor.IWindowManager.Dialog*
  nameWithType.vb: IWindowManager.Dialog(String, Transform, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String, Single, Single, Single, Single, Boolean)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Dialog(System.String, Transform, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), System.String, System.String, System.Single, System.Single, System.Single, System.Single, System.Boolean)
  name.vb: Dialog(String, Transform, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String, Single, Single, Single, Single, Boolean)
- uid: Battlehub.RTEditor.IWindowManager.Dialog(Sprite,System.String,Transform,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:Battlehub.RTEditor.IWindowManager.Dialog(Sprite,System.String,Transform,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  id: Dialog(Sprite,System.String,Transform,DialogAction{DialogCancelArgs},DialogAction{DialogCancelArgs},System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: Dialog(Sprite, String, Transform, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String, Single, Single, Single, Single, Boolean)
  nameWithType: IWindowManager.Dialog(Sprite, String, Transform, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, String, String, Single, Single, Single, Single, Boolean)
  fullName: Battlehub.RTEditor.IWindowManager.Dialog(Sprite, System.String, Transform, DialogAction<DialogCancelArgs>, DialogAction<DialogCancelArgs>, System.String, System.String, System.Single, System.Single, System.Single, System.Single, System.Boolean)
  type: Method
  source:
    id: Dialog
    path: ''
    startLine: 34991
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCreates dialog.\n"
  example: []
  syntax:
    content: void Dialog(Sprite icon, string header, Transform content, DialogAction<DialogCancelArgs> ok, DialogAction<DialogCancelArgs> cancel, string okText = "OK", string cancelText = "Cancel", float minWidth = 150F, float minHeight = 150F, float preferredWidth = 700F, float preferredHeight = 400F, bool canResize = true)
    parameters:
    - id: icon
      type: Global.Sprite
    - id: header
      type: System.String
    - id: content
      type: Global.Transform
    - id: ok
      type: Global.DialogAction{DialogCancelArgs}
    - id: cancel
      type: Global.DialogAction{DialogCancelArgs}
    - id: okText
      type: System.String
    - id: cancelText
      type: System.String
    - id: minWidth
      type: System.Single
    - id: minHeight
      type: System.Single
    - id: preferredWidth
      type: System.Single
    - id: preferredHeight
      type: System.Single
    - id: canResize
      type: System.Boolean
    content.vb: Sub Dialog(icon As Sprite, header As String, content As Transform, ok As DialogAction(Of DialogCancelArgs), cancel As DialogAction(Of DialogCancelArgs), okText As String = "OK", cancelText As String = "Cancel", minWidth As Single = 150F, minHeight As Single = 150F, preferredWidth As Single = 700F, preferredHeight As Single = 400F, canResize As Boolean = True)
  overload: Battlehub.RTEditor.IWindowManager.Dialog*
  nameWithType.vb: IWindowManager.Dialog(Sprite, String, Transform, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String, Single, Single, Single, Single, Boolean)
  fullName.vb: Battlehub.RTEditor.IWindowManager.Dialog(Sprite, System.String, Transform, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), System.String, System.String, System.Single, System.Single, System.Single, System.Single, System.Boolean)
  name.vb: Dialog(Sprite, String, Transform, DialogAction(Of DialogCancelArgs), DialogAction(Of DialogCancelArgs), String, String, Single, Single, Single, Single, Boolean)
- uid: Battlehub.RTEditor.IWindowManager.CopyTransform(Transform,Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.CopyTransform(Transform,Transform)
  id: CopyTransform(Transform,Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: CopyTransform(Transform, Transform)
  nameWithType: IWindowManager.CopyTransform(Transform, Transform)
  fullName: Battlehub.RTEditor.IWindowManager.CopyTransform(Transform, Transform)
  type: Method
  source:
    id: CopyTransform
    path: ''
    startLine: 35003
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nCopies source window transform to target window transform.\n"
  example: []
  syntax:
    content: void CopyTransform(Transform targetConent, Transform sourceContent)
    parameters:
    - id: targetConent
      type: Global.Transform
      description: Target window transform.
    - id: sourceContent
      type: Global.Transform
      description: Source window transform.
    content.vb: Sub CopyTransform(targetConent As Transform, sourceContent As Transform)
  overload: Battlehub.RTEditor.IWindowManager.CopyTransform*
- uid: Battlehub.RTEditor.IWindowManager.SetTransform(Transform,Vector2,Vector2,Vector2,Vector2)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetTransform(Transform,Vector2,Vector2,Vector2,Vector2)
  id: SetTransform(Transform,Vector2,Vector2,Vector2,Vector2)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetTransform(Transform, Vector2, Vector2, Vector2, Vector2)
  nameWithType: IWindowManager.SetTransform(Transform, Vector2, Vector2, Vector2, Vector2)
  fullName: Battlehub.RTEditor.IWindowManager.SetTransform(Transform, Vector2, Vector2, Vector2, Vector2)
  type: Method
  source:
    id: SetTransform
    path: ''
    startLine: 35013
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nSets anchoredPosition, anchorMin, anchorMax and size delta.\n"
  example: []
  syntax:
    content: void SetTransform(Transform content, Vector2 anchoredPosition, Vector2 anchorMin, Vector2 anchorMax, Vector2 sizeDelta)
    parameters:
    - id: content
      type: Global.Transform
      description: Target window transform.
    - id: anchoredPosition
      type: Global.Vector2
      description: Anchored position.
    - id: anchorMin
      type: Global.Vector2
      description: Anchor min.
    - id: anchorMax
      type: Global.Vector2
      description: Anchor max.
    - id: sizeDelta
      type: Global.Vector2
      description: Size delta.
    content.vb: Sub SetTransform(content As Transform, anchoredPosition As Vector2, anchorMin As Vector2, anchorMax As Vector2, sizeDelta As Vector2)
  overload: Battlehub.RTEditor.IWindowManager.SetTransform*
- uid: Battlehub.RTEditor.IWindowManager.GetHeaderText(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.GetHeaderText(Transform)
  id: GetHeaderText(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetHeaderText(Transform)
  nameWithType: IWindowManager.GetHeaderText(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.GetHeaderText(Transform)
  type: Method
  source:
    id: GetHeaderText
    path: ''
    startLine: 35020
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nGets header text of the window.\n"
  example: []
  syntax:
    content: string GetHeaderText(Transform content)
    parameters:
    - id: content
      type: Global.Transform
      description: Window transform.
    return:
      type: System.String
      description: Header text.
    content.vb: Function GetHeaderText(content As Transform) As String
  overload: Battlehub.RTEditor.IWindowManager.GetHeaderText*
- uid: Battlehub.RTEditor.IWindowManager.SetHeaderText(Transform,System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetHeaderText(Transform,System.String)
  id: SetHeaderText(Transform,System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetHeaderText(Transform, String)
  nameWithType: IWindowManager.SetHeaderText(Transform, String)
  fullName: Battlehub.RTEditor.IWindowManager.SetHeaderText(Transform, System.String)
  type: Method
  source:
    id: SetHeaderText
    path: ''
    startLine: 35027
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nSets header text of the window.\n"
  example: []
  syntax:
    content: void SetHeaderText(Transform content, string headerText)
    parameters:
    - id: content
      type: Global.Transform
      description: Window transform.
    - id: headerText
      type: System.String
      description: Header text.
    content.vb: Sub SetHeaderText(content As Transform, headerText As String)
  overload: Battlehub.RTEditor.IWindowManager.SetHeaderText*
- uid: Battlehub.RTEditor.IWindowManager.GetHeaderIcon(Transform)
  commentId: M:Battlehub.RTEditor.IWindowManager.GetHeaderIcon(Transform)
  id: GetHeaderIcon(Transform)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetHeaderIcon(Transform)
  nameWithType: IWindowManager.GetHeaderIcon(Transform)
  fullName: Battlehub.RTEditor.IWindowManager.GetHeaderIcon(Transform)
  type: Method
  source:
    id: GetHeaderIcon
    path: ''
    startLine: 35034
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nGets header icon.\n"
  example: []
  syntax:
    content: Sprite GetHeaderIcon(Transform content)
    parameters:
    - id: content
      type: Global.Transform
      description: Window transform.
    return:
      type: Global.Sprite
      description: Header icon.
    content.vb: Function GetHeaderIcon(content As Transform) As Sprite
  overload: Battlehub.RTEditor.IWindowManager.GetHeaderIcon*
- uid: Battlehub.RTEditor.IWindowManager.SetHeaderIcon(Transform,Sprite)
  commentId: M:Battlehub.RTEditor.IWindowManager.SetHeaderIcon(Transform,Sprite)
  id: SetHeaderIcon(Transform,Sprite)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SetHeaderIcon(Transform, Sprite)
  nameWithType: IWindowManager.SetHeaderIcon(Transform, Sprite)
  fullName: Battlehub.RTEditor.IWindowManager.SetHeaderIcon(Transform, Sprite)
  type: Method
  source:
    id: SetHeaderIcon
    path: ''
    startLine: 35041
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  summary: "\nSets header icon.\n"
  example: []
  syntax:
    content: void SetHeaderIcon(Transform content, Sprite icon)
    parameters:
    - id: content
      type: Global.Transform
      description: Window transform.
    - id: icon
      type: Global.Sprite
      description: Header icon.
    content.vb: Sub SetHeaderIcon(content As Transform, icon As Sprite)
  overload: Battlehub.RTEditor.IWindowManager.SetHeaderIcon*
- uid: Battlehub.RTEditor.IWindowManager.ForceLayoutUpdate
  commentId: M:Battlehub.RTEditor.IWindowManager.ForceLayoutUpdate
  id: ForceLayoutUpdate
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: ForceLayoutUpdate()
  nameWithType: IWindowManager.ForceLayoutUpdate()
  fullName: Battlehub.RTEditor.IWindowManager.ForceLayoutUpdate()
  type: Method
  source:
    id: ForceLayoutUpdate
    path: ''
    startLine: 35043
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  syntax:
    content: void ForceLayoutUpdate()
    content.vb: Sub ForceLayoutUpdate
  overload: Battlehub.RTEditor.IWindowManager.ForceLayoutUpdate*
- uid: Battlehub.RTEditor.IWindowManager.DefaultPersistentLayoutName
  commentId: P:Battlehub.RTEditor.IWindowManager.DefaultPersistentLayoutName
  id: DefaultPersistentLayoutName
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: DefaultPersistentLayoutName
  nameWithType: IWindowManager.DefaultPersistentLayoutName
  fullName: Battlehub.RTEditor.IWindowManager.DefaultPersistentLayoutName
  type: Property
  source:
    id: DefaultPersistentLayoutName
    path: ''
    startLine: 35045
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  syntax:
    content: string DefaultPersistentLayoutName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property DefaultPersistentLayoutName As String
  overload: Battlehub.RTEditor.IWindowManager.DefaultPersistentLayoutName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Battlehub.RTEditor.IWindowManager.LayoutExist(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.LayoutExist(System.String)
  id: LayoutExist(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: LayoutExist(String)
  nameWithType: IWindowManager.LayoutExist(String)
  fullName: Battlehub.RTEditor.IWindowManager.LayoutExist(System.String)
  type: Method
  source:
    id: LayoutExist
    path: ''
    startLine: 35051
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  syntax:
    content: bool LayoutExist(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function LayoutExist(name As String) As Boolean
  overload: Battlehub.RTEditor.IWindowManager.LayoutExist*
- uid: Battlehub.RTEditor.IWindowManager.SaveLayout(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.SaveLayout(System.String)
  id: SaveLayout(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: SaveLayout(String)
  nameWithType: IWindowManager.SaveLayout(String)
  fullName: Battlehub.RTEditor.IWindowManager.SaveLayout(System.String)
  type: Method
  source:
    id: SaveLayout
    path: ''
    startLine: 35054
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  syntax:
    content: void SaveLayout(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Sub SaveLayout(name As String)
  overload: Battlehub.RTEditor.IWindowManager.SaveLayout*
- uid: Battlehub.RTEditor.IWindowManager.GetLayout(System.String,GameObject)
  commentId: M:Battlehub.RTEditor.IWindowManager.GetLayout(System.String,GameObject)
  id: GetLayout(System.String,GameObject)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: GetLayout(String, GameObject)
  nameWithType: IWindowManager.GetLayout(String, GameObject)
  fullName: Battlehub.RTEditor.IWindowManager.GetLayout(System.String, GameObject)
  type: Method
  source:
    id: GetLayout
    path: ''
    startLine: 35057
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  syntax:
    content: LayoutInfo GetLayout(string name, GameObject tabPrefab = null)
    parameters:
    - id: name
      type: System.String
    - id: tabPrefab
      type: Global.GameObject
    return:
      type: Global.LayoutInfo
    content.vb: Function GetLayout(name As String, tabPrefab As GameObject = Nothing) As LayoutInfo
  overload: Battlehub.RTEditor.IWindowManager.GetLayout*
- uid: Battlehub.RTEditor.IWindowManager.LoadLayout(System.String,GameObject)
  commentId: M:Battlehub.RTEditor.IWindowManager.LoadLayout(System.String,GameObject)
  id: LoadLayout(System.String,GameObject)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: LoadLayout(String, GameObject)
  nameWithType: IWindowManager.LoadLayout(String, GameObject)
  fullName: Battlehub.RTEditor.IWindowManager.LoadLayout(System.String, GameObject)
  type: Method
  source:
    id: LoadLayout
    path: ''
    startLine: 35060
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  syntax:
    content: void LoadLayout(string name, GameObject tabPrefab = null)
    parameters:
    - id: name
      type: System.String
    - id: tabPrefab
      type: Global.GameObject
    content.vb: Sub LoadLayout(name As String, tabPrefab As GameObject = Nothing)
  overload: Battlehub.RTEditor.IWindowManager.LoadLayout*
- uid: Battlehub.RTEditor.IWindowManager.DeleteLayout(System.String)
  commentId: M:Battlehub.RTEditor.IWindowManager.DeleteLayout(System.String)
  id: DeleteLayout(System.String)
  parent: Battlehub.RTEditor.IWindowManager
  langs:
  - csharp
  - vb
  name: DeleteLayout(String)
  nameWithType: IWindowManager.DeleteLayout(String)
  fullName: Battlehub.RTEditor.IWindowManager.DeleteLayout(System.String)
  type: Method
  source:
    id: DeleteLayout
    path: ''
    startLine: 35063
  assemblies:
  - cs.temp.dll
  namespace: Battlehub.RTEditor
  syntax:
    content: void DeleteLayout(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Sub DeleteLayout(name As String)
  overload: Battlehub.RTEditor.IWindowManager.DeleteLayout*
references:
- uid: Battlehub.RTEditor
  commentId: N:Battlehub.RTEditor
  name: Battlehub.RTEditor
  nameWithType: Battlehub.RTEditor
  fullName: Battlehub.RTEditor
- uid: Battlehub.RTEditor.IWindowManager.IsDialogOpened*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.IsDialogOpened
  name: IsDialogOpened
  nameWithType: IWindowManager.IsDialogOpened
  fullName: Battlehub.RTEditor.IWindowManager.IsDialogOpened
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Battlehub.RTEditor.IWindowManager.PopupRoot*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.PopupRoot
  name: PopupRoot
  nameWithType: IWindowManager.PopupRoot
  fullName: Battlehub.RTEditor.IWindowManager.PopupRoot
- uid: Global.RectTransform
  isExternal: true
  name: RectTransform
  nameWithType: RectTransform
  fullName: RectTransform
- uid: Battlehub.RTEditor.IWindowManager.ComponentsRoot*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.ComponentsRoot
  name: ComponentsRoot
  nameWithType: IWindowManager.ComponentsRoot
  fullName: Battlehub.RTEditor.IWindowManager.ComponentsRoot
- uid: Global.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: Global.Action{Battlehub.RTEditor.IWindowManager}
  commentId: '!:Global.Action{Battlehub.RTEditor.IWindowManager}'
  definition: Global.Action`1
  name: Action<IWindowManager>
  nameWithType: Action<IWindowManager>
  fullName: Action<Battlehub.RTEditor.IWindowManager>
  nameWithType.vb: Action(Of IWindowManager)
  fullName.vb: Action(Of Battlehub.RTEditor.IWindowManager)
  name.vb: Action(Of IWindowManager)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Battlehub.RTEditor.IWindowManager
    name: IWindowManager
    nameWithType: IWindowManager
    fullName: Battlehub.RTEditor.IWindowManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Battlehub.RTEditor.IWindowManager
    name: IWindowManager
    nameWithType: IWindowManager
    fullName: Battlehub.RTEditor.IWindowManager
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Action{Transform}
  commentId: '!:Global.Action{Transform}'
  definition: Global.Action`1
  name: Action<Transform>
  nameWithType: Action<Transform>
  fullName: Action<Transform>
  nameWithType.vb: Action(Of Transform)
  fullName.vb: Action(Of Transform)
  name.vb: Action(Of Transform)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Transform
    name: Transform
    nameWithType: Transform
    fullName: Transform
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Transform
    name: Transform
    nameWithType: Transform
    fullName: Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Battlehub.RTEditor.IWindowManager.ActiveWorkspace*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.ActiveWorkspace
  name: ActiveWorkspace
  nameWithType: IWindowManager.ActiveWorkspace
  fullName: Battlehub.RTEditor.IWindowManager.ActiveWorkspace
- uid: Battlehub.RTEditor.Workspace
  commentId: T:Battlehub.RTEditor.Workspace
  parent: Battlehub.RTEditor
  name: Workspace
  nameWithType: Workspace
  fullName: Battlehub.RTEditor.Workspace
- uid: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.CreateLayoutInfo
  name: CreateLayoutInfo
  nameWithType: IWindowManager.CreateLayoutInfo
  fullName: Battlehub.RTEditor.IWindowManager.CreateLayoutInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.LayoutInfo
  isExternal: true
  name: LayoutInfo
  nameWithType: LayoutInfo
  fullName: LayoutInfo
- uid: Battlehub.RTEditor.WindowDescriptor
  commentId: T:Battlehub.RTEditor.WindowDescriptor
  parent: Battlehub.RTEditor
  name: WindowDescriptor
  nameWithType: WindowDescriptor
  fullName: Battlehub.RTEditor.WindowDescriptor
- uid: Global.Sprite
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: Sprite
- uid: Battlehub.RTEditor.IWindowManager.ValidateLayout*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.ValidateLayout
  name: ValidateLayout
  nameWithType: IWindowManager.ValidateLayout
  fullName: Battlehub.RTEditor.IWindowManager.ValidateLayout
- uid: Battlehub.RTEditor.IWindowManager.OverrideDefaultLayout*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.OverrideDefaultLayout
  name: OverrideDefaultLayout
  nameWithType: IWindowManager.OverrideDefaultLayout
  fullName: Battlehub.RTEditor.IWindowManager.OverrideDefaultLayout
- uid: Global.Func{Battlehub.RTEditor.IWindowManager,LayoutInfo}
  commentId: '!:Global.Func{Battlehub.RTEditor.IWindowManager,LayoutInfo}'
  definition: Global.Func`2
  name: Func<IWindowManager, LayoutInfo>
  nameWithType: Func<IWindowManager, LayoutInfo>
  fullName: Func<Battlehub.RTEditor.IWindowManager, LayoutInfo>
  nameWithType.vb: Func(Of IWindowManager, LayoutInfo)
  fullName.vb: Func(Of Battlehub.RTEditor.IWindowManager, LayoutInfo)
  name.vb: Func(Of IWindowManager, LayoutInfo)
  spec.csharp:
  - uid: Global.Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Battlehub.RTEditor.IWindowManager
    name: IWindowManager
    nameWithType: IWindowManager
    fullName: Battlehub.RTEditor.IWindowManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Global.LayoutInfo
    name: LayoutInfo
    nameWithType: LayoutInfo
    fullName: LayoutInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Battlehub.RTEditor.IWindowManager
    name: IWindowManager
    nameWithType: IWindowManager
    fullName: Battlehub.RTEditor.IWindowManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Global.LayoutInfo
    name: LayoutInfo
    nameWithType: LayoutInfo
    fullName: LayoutInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Global.Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Battlehub.RTEditor.IWindowManager.SetDefaultLayout*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetDefaultLayout
  name: SetDefaultLayout
  nameWithType: IWindowManager.SetDefaultLayout
  fullName: Battlehub.RTEditor.IWindowManager.SetDefaultLayout
- uid: Battlehub.RTEditor.IWindowManager.SetLayout*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetLayout
  name: SetLayout
  nameWithType: IWindowManager.SetLayout
  fullName: Battlehub.RTEditor.IWindowManager.SetLayout
- uid: Global.Func{LayoutInfo}
  commentId: '!:Global.Func{LayoutInfo}'
  definition: Global.Func`1
  name: Func<LayoutInfo>
  nameWithType: Func<LayoutInfo>
  fullName: Func<LayoutInfo>
  nameWithType.vb: Func(Of LayoutInfo)
  fullName.vb: Func(Of LayoutInfo)
  name.vb: Func(Of LayoutInfo)
  spec.csharp:
  - uid: Global.Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.LayoutInfo
    name: LayoutInfo
    nameWithType: LayoutInfo
    fullName: LayoutInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.LayoutInfo
    name: LayoutInfo
    nameWithType: LayoutInfo
    fullName: LayoutInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Func`1
  isExternal: true
  name: Func<>
  nameWithType: Func<>
  fullName: Func<>
  nameWithType.vb: Func(Of )
  fullName.vb: Func(Of )
  name.vb: Func(Of )
  spec.csharp:
  - uid: Global.Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Func`1
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Battlehub.RTEditor.IWindowManager.GetLayout*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.GetLayout
  name: GetLayout
  nameWithType: IWindowManager.GetLayout
  fullName: Battlehub.RTEditor.IWindowManager.GetLayout
- uid: Battlehub.RTEditor.IWindowManager.OverrideWindow*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.OverrideWindow
  name: OverrideWindow
  nameWithType: IWindowManager.OverrideWindow
  fullName: Battlehub.RTEditor.IWindowManager.OverrideWindow
- uid: Global.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: Battlehub.RTEditor.IWindowManager.OverrideTools*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.OverrideTools
  name: OverrideTools
  nameWithType: IWindowManager.OverrideTools
  fullName: Battlehub.RTEditor.IWindowManager.OverrideTools
- uid: Battlehub.RTEditor.IWindowManager.SetTools*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetTools
  name: SetTools
  nameWithType: IWindowManager.SetTools
  fullName: Battlehub.RTEditor.IWindowManager.SetTools
- uid: Battlehub.RTEditor.IWindowManager.SetLeftBar*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetLeftBar
  name: SetLeftBar
  nameWithType: IWindowManager.SetLeftBar
  fullName: Battlehub.RTEditor.IWindowManager.SetLeftBar
- uid: Battlehub.RTEditor.IWindowManager.SetRightBar*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetRightBar
  name: SetRightBar
  nameWithType: IWindowManager.SetRightBar
  fullName: Battlehub.RTEditor.IWindowManager.SetRightBar
- uid: Battlehub.RTEditor.IWindowManager.SetTopBar*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetTopBar
  name: SetTopBar
  nameWithType: IWindowManager.SetTopBar
  fullName: Battlehub.RTEditor.IWindowManager.SetTopBar
- uid: Battlehub.RTEditor.IWindowManager.SetBottomBar*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetBottomBar
  name: SetBottomBar
  nameWithType: IWindowManager.SetBottomBar
  fullName: Battlehub.RTEditor.IWindowManager.SetBottomBar
- uid: Battlehub.RTEditor.IWindowManager.IsWindowRegistered*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.IsWindowRegistered
  name: IsWindowRegistered
  nameWithType: IWindowManager.IsWindowRegistered
  fullName: Battlehub.RTEditor.IWindowManager.IsWindowRegistered
- uid: Battlehub.RTEditor.IWindowManager.RegisterWindow*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.RegisterWindow
  name: RegisterWindow
  nameWithType: IWindowManager.RegisterWindow
  fullName: Battlehub.RTEditor.IWindowManager.RegisterWindow
- uid: Battlehub.RTEditor.CustomWindowDescriptor
  commentId: T:Battlehub.RTEditor.CustomWindowDescriptor
  parent: Battlehub.RTEditor
  name: CustomWindowDescriptor
  nameWithType: CustomWindowDescriptor
  fullName: Battlehub.RTEditor.CustomWindowDescriptor
- uid: Battlehub.RTEditor.IWindowManager.GetWindowDescriptor*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.GetWindowDescriptor
  name: GetWindowDescriptor
  nameWithType: IWindowManager.GetWindowDescriptor
  fullName: Battlehub.RTEditor.IWindowManager.GetWindowDescriptor
- uid: Battlehub.RTEditor.IWindowManager.GetWindowTypeName*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.GetWindowTypeName
  name: GetWindowTypeName
  nameWithType: IWindowManager.GetWindowTypeName
  fullName: Battlehub.RTEditor.IWindowManager.GetWindowTypeName
- uid: Battlehub.RTEditor.IWindowManager.GetWindow*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.GetWindow
  name: GetWindow
  nameWithType: IWindowManager.GetWindow
  fullName: Battlehub.RTEditor.IWindowManager.GetWindow
- uid: Battlehub.RTEditor.IWindowManager.GetWindows*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.GetWindows
  name: GetWindows
  nameWithType: IWindowManager.GetWindows
  fullName: Battlehub.RTEditor.IWindowManager.GetWindows
- uid: Global.Transform[]
  isExternal: true
  name: Transform[]
  nameWithType: Transform[]
  fullName: Transform[]
  nameWithType.vb: Transform()
  fullName.vb: Transform()
  name.vb: Transform()
  spec.csharp:
  - uid: Global.Transform
    name: Transform
    nameWithType: Transform
    fullName: Transform
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Global.Transform
    name: Transform
    nameWithType: Transform
    fullName: Transform
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Battlehub.RTEditor.IWindowManager.GetComponents*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.GetComponents
  name: GetComponents
  nameWithType: IWindowManager.GetComponents
  fullName: Battlehub.RTEditor.IWindowManager.GetComponents
- uid: Battlehub.RTEditor.IWindowManager.Exists*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.Exists
  name: Exists
  nameWithType: IWindowManager.Exists
  fullName: Battlehub.RTEditor.IWindowManager.Exists
- uid: Battlehub.RTEditor.IWindowManager.IsActive*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.IsActive
  name: IsActive
  nameWithType: IWindowManager.IsActive
  fullName: Battlehub.RTEditor.IWindowManager.IsActive
- uid: Battlehub.RTEditor.IWindowManager.FindPointerOverWindow*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.FindPointerOverWindow
  name: FindPointerOverWindow
  nameWithType: IWindowManager.FindPointerOverWindow
  fullName: Battlehub.RTEditor.IWindowManager.FindPointerOverWindow
- uid: Battlehub.RTCommon.RuntimeWindow
  commentId: T:Battlehub.RTCommon.RuntimeWindow
  parent: Battlehub.RTCommon
  name: RuntimeWindow
  nameWithType: RuntimeWindow
  fullName: Battlehub.RTCommon.RuntimeWindow
- uid: Battlehub.RTCommon
  commentId: N:Battlehub.RTCommon
  name: Battlehub.RTCommon
  nameWithType: Battlehub.RTCommon
  fullName: Battlehub.RTCommon
- uid: Battlehub.RTEditor.IWindowManager.ActivateWindow*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.ActivateWindow
  name: ActivateWindow
  nameWithType: IWindowManager.ActivateWindow
  fullName: Battlehub.RTEditor.IWindowManager.ActivateWindow
- uid: Battlehub.RTEditor.IWindowManager.CreateWindow*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.CreateWindow
  name: CreateWindow
  nameWithType: IWindowManager.CreateWindow
  fullName: Battlehub.RTEditor.IWindowManager.CreateWindow
- uid: Global.RegionSplitType
  commentId: '!:Global.RegionSplitType'
  isExternal: true
  name: RegionSplitType
  nameWithType: RegionSplitType
  fullName: RegionSplitType
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Battlehub.RTEditor.IWindowManager.CreatePopup*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.CreatePopup
  name: CreatePopup
  nameWithType: IWindowManager.CreatePopup
  fullName: Battlehub.RTEditor.IWindowManager.CreatePopup
- uid: Battlehub.RTEditor.IWindowManager.ScreenPointToLocalPointInRectangle*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.ScreenPointToLocalPointInRectangle
  name: ScreenPointToLocalPointInRectangle
  nameWithType: IWindowManager.ScreenPointToLocalPointInRectangle
  fullName: Battlehub.RTEditor.IWindowManager.ScreenPointToLocalPointInRectangle
- uid: Global.Vector3
  commentId: '!:Global.Vector3'
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: Global.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: Battlehub.RTEditor.IWindowManager.CreateDropdown*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.CreateDropdown
  name: CreateDropdown
  nameWithType: IWindowManager.CreateDropdown
  fullName: Battlehub.RTEditor.IWindowManager.CreateDropdown
- uid: Battlehub.RTEditor.IWindowManager.SetWindowArgs*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetWindowArgs
  name: SetWindowArgs
  nameWithType: IWindowManager.SetWindowArgs
  fullName: Battlehub.RTEditor.IWindowManager.SetWindowArgs
- uid: Battlehub.RTEditor.IWindowManager.DestroyWindow*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.DestroyWindow
  name: DestroyWindow
  nameWithType: IWindowManager.DestroyWindow
  fullName: Battlehub.RTEditor.IWindowManager.DestroyWindow
- uid: Battlehub.RTEditor.IWindowManager.DestroyWindowsOfType*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.DestroyWindowsOfType
  name: DestroyWindowsOfType
  nameWithType: IWindowManager.DestroyWindowsOfType
  fullName: Battlehub.RTEditor.IWindowManager.DestroyWindowsOfType
- uid: Battlehub.RTEditor.IWindowManager.CreateDialogWindow*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.CreateDialogWindow
  name: CreateDialogWindow
  nameWithType: IWindowManager.CreateDialogWindow
  fullName: Battlehub.RTEditor.IWindowManager.CreateDialogWindow
- uid: Global.DialogAction{DialogCancelArgs}
  commentId: '!:Global.DialogAction{DialogCancelArgs}'
  definition: Global.DialogAction`1
  name: DialogAction<DialogCancelArgs>
  nameWithType: DialogAction<DialogCancelArgs>
  fullName: DialogAction<DialogCancelArgs>
  nameWithType.vb: DialogAction(Of DialogCancelArgs)
  fullName.vb: DialogAction(Of DialogCancelArgs)
  name.vb: DialogAction(Of DialogCancelArgs)
  spec.csharp:
  - uid: Global.DialogAction`1
    name: DialogAction
    nameWithType: DialogAction
    fullName: DialogAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.DialogCancelArgs
    name: DialogCancelArgs
    nameWithType: DialogCancelArgs
    fullName: DialogCancelArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.DialogAction`1
    name: DialogAction
    nameWithType: DialogAction
    fullName: DialogAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.DialogCancelArgs
    name: DialogCancelArgs
    nameWithType: DialogCancelArgs
    fullName: DialogCancelArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.DialogAction`1
  isExternal: true
  name: DialogAction<>
  nameWithType: DialogAction<>
  fullName: DialogAction<>
  nameWithType.vb: DialogAction(Of )
  fullName.vb: DialogAction(Of )
  name.vb: DialogAction(Of )
  spec.csharp:
  - uid: Global.DialogAction`1
    name: DialogAction
    nameWithType: DialogAction
    fullName: DialogAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.DialogAction`1
    name: DialogAction
    nameWithType: DialogAction
    fullName: DialogAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Battlehub.RTEditor.IWindowManager.DestroyDialogWindow*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.DestroyDialogWindow
  name: DestroyDialogWindow
  nameWithType: IWindowManager.DestroyDialogWindow
  fullName: Battlehub.RTEditor.IWindowManager.DestroyDialogWindow
- uid: Battlehub.RTEditor.IWindowManager.MessageBox*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.MessageBox
  name: MessageBox
  nameWithType: IWindowManager.MessageBox
  fullName: Battlehub.RTEditor.IWindowManager.MessageBox
- uid: Battlehub.RTEditor.IWindowManager.Confirmation*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.Confirmation
  name: Confirmation
  nameWithType: IWindowManager.Confirmation
  fullName: Battlehub.RTEditor.IWindowManager.Confirmation
- uid: Battlehub.RTEditor.IWindowManager.Prompt*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.Prompt
  name: Prompt
  nameWithType: IWindowManager.Prompt
  fullName: Battlehub.RTEditor.IWindowManager.Prompt
- uid: Global.DialogAction{Battlehub.RTEditor.PromptDialogArgs}
  commentId: '!:Global.DialogAction{Battlehub.RTEditor.PromptDialogArgs}'
  definition: Global.DialogAction`1
  name: DialogAction<PromptDialogArgs>
  nameWithType: DialogAction<PromptDialogArgs>
  fullName: DialogAction<Battlehub.RTEditor.PromptDialogArgs>
  nameWithType.vb: DialogAction(Of PromptDialogArgs)
  fullName.vb: DialogAction(Of Battlehub.RTEditor.PromptDialogArgs)
  name.vb: DialogAction(Of PromptDialogArgs)
  spec.csharp:
  - uid: Global.DialogAction`1
    name: DialogAction
    nameWithType: DialogAction
    fullName: DialogAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Battlehub.RTEditor.PromptDialogArgs
    name: PromptDialogArgs
    nameWithType: PromptDialogArgs
    fullName: Battlehub.RTEditor.PromptDialogArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.DialogAction`1
    name: DialogAction
    nameWithType: DialogAction
    fullName: DialogAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Battlehub.RTEditor.PromptDialogArgs
    name: PromptDialogArgs
    nameWithType: PromptDialogArgs
    fullName: Battlehub.RTEditor.PromptDialogArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Battlehub.RTEditor.IWindowManager.Dialog*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.Dialog
  name: Dialog
  nameWithType: IWindowManager.Dialog
  fullName: Battlehub.RTEditor.IWindowManager.Dialog
- uid: Battlehub.RTEditor.IWindowManager.CopyTransform*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.CopyTransform
  name: CopyTransform
  nameWithType: IWindowManager.CopyTransform
  fullName: Battlehub.RTEditor.IWindowManager.CopyTransform
- uid: Battlehub.RTEditor.IWindowManager.SetTransform*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetTransform
  name: SetTransform
  nameWithType: IWindowManager.SetTransform
  fullName: Battlehub.RTEditor.IWindowManager.SetTransform
- uid: Battlehub.RTEditor.IWindowManager.GetHeaderText*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.GetHeaderText
  name: GetHeaderText
  nameWithType: IWindowManager.GetHeaderText
  fullName: Battlehub.RTEditor.IWindowManager.GetHeaderText
- uid: Battlehub.RTEditor.IWindowManager.SetHeaderText*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetHeaderText
  name: SetHeaderText
  nameWithType: IWindowManager.SetHeaderText
  fullName: Battlehub.RTEditor.IWindowManager.SetHeaderText
- uid: Battlehub.RTEditor.IWindowManager.GetHeaderIcon*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.GetHeaderIcon
  name: GetHeaderIcon
  nameWithType: IWindowManager.GetHeaderIcon
  fullName: Battlehub.RTEditor.IWindowManager.GetHeaderIcon
- uid: Battlehub.RTEditor.IWindowManager.SetHeaderIcon*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SetHeaderIcon
  name: SetHeaderIcon
  nameWithType: IWindowManager.SetHeaderIcon
  fullName: Battlehub.RTEditor.IWindowManager.SetHeaderIcon
- uid: Battlehub.RTEditor.IWindowManager.ForceLayoutUpdate*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.ForceLayoutUpdate
  name: ForceLayoutUpdate
  nameWithType: IWindowManager.ForceLayoutUpdate
  fullName: Battlehub.RTEditor.IWindowManager.ForceLayoutUpdate
- uid: Battlehub.RTEditor.IWindowManager.DefaultPersistentLayoutName*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.DefaultPersistentLayoutName
  name: DefaultPersistentLayoutName
  nameWithType: IWindowManager.DefaultPersistentLayoutName
  fullName: Battlehub.RTEditor.IWindowManager.DefaultPersistentLayoutName
- uid: Battlehub.RTEditor.IWindowManager.LayoutExist*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.LayoutExist
  name: LayoutExist
  nameWithType: IWindowManager.LayoutExist
  fullName: Battlehub.RTEditor.IWindowManager.LayoutExist
- uid: Battlehub.RTEditor.IWindowManager.SaveLayout*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.SaveLayout
  name: SaveLayout
  nameWithType: IWindowManager.SaveLayout
  fullName: Battlehub.RTEditor.IWindowManager.SaveLayout
- uid: Battlehub.RTEditor.IWindowManager.LoadLayout*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.LoadLayout
  name: LoadLayout
  nameWithType: IWindowManager.LoadLayout
  fullName: Battlehub.RTEditor.IWindowManager.LoadLayout
- uid: Battlehub.RTEditor.IWindowManager.DeleteLayout*
  commentId: Overload:Battlehub.RTEditor.IWindowManager.DeleteLayout
  name: DeleteLayout
  nameWithType: IWindowManager.DeleteLayout
  fullName: Battlehub.RTEditor.IWindowManager.DeleteLayout
